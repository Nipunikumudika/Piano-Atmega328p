
piano.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000052  00800100  00000f46  00000fba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f46  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  0000100c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001068  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d8  00000000  00000000  000010a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001e40  00000000  00000000  00001180  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a4a  00000000  00000000  00002fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000fdd  00000000  00000000  00003a0a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000364  00000000  00000000  000049e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005d4  00000000  00000000  00004d4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001d00  00000000  00000000  00005320  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000268  00000000  00000000  00007020  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 99 01 	jmp	0x332	; 0x332 <__vector_1>
   8:	0c 94 d2 01 	jmp	0x3a4	; 0x3a4 <__vector_2>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e4       	ldi	r30, 0x46	; 70
  7c:	ff e0       	ldi	r31, 0x0F	; 15
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 35       	cpi	r26, 0x52	; 82
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 0e 02 	call	0x41c	; 0x41c <main>
  8e:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <lcd_send_command>:
	
}

void lcd_send_command (uint8_t command)
{
	DATA_BUS=(command&0b11110000);
  96:	98 2f       	mov	r25, r24
  98:	90 7f       	andi	r25, 0xF0	; 240
  9a:	9b b9       	out	0x0b, r25	; 11
	CTL_BUS &=~(1<<LCD_RS);
  9c:	43 98       	cbi	0x08, 3	; 8
	CTL_BUS |=(1<<LCD_EN);
  9e:	45 9a       	sbi	0x08, 5	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a0:	ef e9       	ldi	r30, 0x9F	; 159
  a2:	ff e0       	ldi	r31, 0x0F	; 15
  a4:	31 97       	sbiw	r30, 0x01	; 1
  a6:	f1 f7       	brne	.-4      	; 0xa4 <lcd_send_command+0xe>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <lcd_send_command+0x14>
  aa:	00 00       	nop
	_delay_ms(1);
	CTL_BUS &=~(1<<LCD_EN);
  ac:	45 98       	cbi	0x08, 5	; 8
  ae:	ef e9       	ldi	r30, 0x9F	; 159
  b0:	ff e0       	ldi	r31, 0x0F	; 15
  b2:	31 97       	sbiw	r30, 0x01	; 1
  b4:	f1 f7       	brne	.-4      	; 0xb2 <lcd_send_command+0x1c>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <lcd_send_command+0x22>
  b8:	00 00       	nop
	_delay_ms(1);
	DATA_BUS=((command&0b00001111)<<4);
  ba:	f0 e1       	ldi	r31, 0x10	; 16
  bc:	8f 9f       	mul	r24, r31
  be:	c0 01       	movw	r24, r0
  c0:	11 24       	eor	r1, r1
  c2:	8b b9       	out	0x0b, r24	; 11
	CTL_BUS |=(1<<LCD_EN);
  c4:	45 9a       	sbi	0x08, 5	; 8
  c6:	8f e9       	ldi	r24, 0x9F	; 159
  c8:	9f e0       	ldi	r25, 0x0F	; 15
  ca:	01 97       	sbiw	r24, 0x01	; 1
  cc:	f1 f7       	brne	.-4      	; 0xca <lcd_send_command+0x34>
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <lcd_send_command+0x3a>
  d0:	00 00       	nop
	_delay_ms(1);
	CTL_BUS &=~(1<<LCD_EN);
  d2:	45 98       	cbi	0x08, 5	; 8
  d4:	ef e9       	ldi	r30, 0x9F	; 159
  d6:	ff e0       	ldi	r31, 0x0F	; 15
  d8:	31 97       	sbiw	r30, 0x01	; 1
  da:	f1 f7       	brne	.-4      	; 0xd8 <lcd_send_command+0x42>
  dc:	00 c0       	rjmp	.+0      	; 0xde <lcd_send_command+0x48>
  de:	00 00       	nop
  e0:	08 95       	ret

000000e2 <lcd_init>:


void lcd_init(void)
{
	
	DATA_DDR = (1<<LCD_D7) | (1<<LCD_D6) | (1<<LCD_D5)| (1<<LCD_D4);
  e2:	80 ef       	ldi	r24, 0xF0	; 240
  e4:	8a b9       	out	0x0a, r24	; 10
	CTL_DDR |= (1<<LCD_EN)|(1<<LCD_RW)|(1<<LCD_RS);
  e6:	87 b1       	in	r24, 0x07	; 7
  e8:	88 63       	ori	r24, 0x38	; 56
  ea:	87 b9       	out	0x07, r24	; 7

	
	DATA_BUS = (0<<LCD_D7)|(0<<LCD_D6)|(1<<LCD_D5)|(0<<LCD_D4);
  ec:	80 e2       	ldi	r24, 0x20	; 32
  ee:	8b b9       	out	0x0b, r24	; 11
	CTL_BUS|= (1<<LCD_EN)|(0<<LCD_RW)|(0<<LCD_RS);
  f0:	45 9a       	sbi	0x08, 5	; 8
  f2:	8f e9       	ldi	r24, 0x9F	; 159
  f4:	9f e0       	ldi	r25, 0x0F	; 15
  f6:	01 97       	sbiw	r24, 0x01	; 1
  f8:	f1 f7       	brne	.-4      	; 0xf6 <lcd_init+0x14>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <lcd_init+0x1a>
  fc:	00 00       	nop
	_delay_ms(1);
	CTL_BUS &=~(1<<LCD_EN);
  fe:	45 98       	cbi	0x08, 5	; 8
 100:	8f e9       	ldi	r24, 0x9F	; 159
 102:	9f e0       	ldi	r25, 0x0F	; 15
 104:	01 97       	sbiw	r24, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <lcd_init+0x22>
 108:	00 c0       	rjmp	.+0      	; 0x10a <lcd_init+0x28>
 10a:	00 00       	nop
	_delay_ms(1);
	
	lcd_send_command(LCD_CMD_4BIT_2ROW_5X7);
 10c:	88 e2       	ldi	r24, 0x28	; 40
 10e:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_send_command>
 112:	8f e9       	ldi	r24, 0x9F	; 159
 114:	9f e0       	ldi	r25, 0x0F	; 15
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <lcd_init+0x34>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <lcd_init+0x3a>
 11c:	00 00       	nop
	_delay_ms(1);
	lcd_send_command(LCD_CMD_DISPLAY_NO_CURSOR);
 11e:	8c e0       	ldi	r24, 0x0C	; 12
 120:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_send_command>
 124:	8f e9       	ldi	r24, 0x9F	; 159
 126:	9f e0       	ldi	r25, 0x0F	; 15
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <lcd_init+0x46>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <lcd_init+0x4c>
 12e:	00 00       	nop
	_delay_ms(1);
	lcd_send_command(0x80);
 130:	80 e8       	ldi	r24, 0x80	; 128
 132:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_send_command>
 136:	08 95       	ret

00000138 <lcd_write_character>:
	}
}
void lcd_write_character(uint8_t character)
{
	
	DATA_BUS=(character & 0b11110000);
 138:	98 2f       	mov	r25, r24
 13a:	90 7f       	andi	r25, 0xF0	; 240
 13c:	9b b9       	out	0x0b, r25	; 11
	CTL_BUS|=(1<<LCD_RS);
 13e:	43 9a       	sbi	0x08, 3	; 8
	CTL_BUS |=(1<<LCD_EN);
 140:	45 9a       	sbi	0x08, 5	; 8
 142:	ef e3       	ldi	r30, 0x3F	; 63
 144:	ff e1       	ldi	r31, 0x1F	; 31
 146:	31 97       	sbiw	r30, 0x01	; 1
 148:	f1 f7       	brne	.-4      	; 0x146 <lcd_write_character+0xe>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <lcd_write_character+0x14>
 14c:	00 00       	nop
	_delay_ms(2);
	CTL_BUS &=~(1<<LCD_EN);
 14e:	45 98       	cbi	0x08, 5	; 8
 150:	ef e3       	ldi	r30, 0x3F	; 63
 152:	ff e1       	ldi	r31, 0x1F	; 31
 154:	31 97       	sbiw	r30, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <lcd_write_character+0x1c>
 158:	00 c0       	rjmp	.+0      	; 0x15a <lcd_write_character+0x22>
 15a:	00 00       	nop
	_delay_ms(2);
	DATA_BUS=((character & 0b00001111)<<4);
 15c:	f0 e1       	ldi	r31, 0x10	; 16
 15e:	8f 9f       	mul	r24, r31
 160:	c0 01       	movw	r24, r0
 162:	11 24       	eor	r1, r1
 164:	8b b9       	out	0x0b, r24	; 11
	CTL_BUS |=(1<<LCD_EN);
 166:	45 9a       	sbi	0x08, 5	; 8
 168:	8f e3       	ldi	r24, 0x3F	; 63
 16a:	9f e1       	ldi	r25, 0x1F	; 31
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <lcd_write_character+0x34>
 170:	00 c0       	rjmp	.+0      	; 0x172 <lcd_write_character+0x3a>
 172:	00 00       	nop
	_delay_ms(2);
	CTL_BUS &=~(1<<LCD_EN);
 174:	45 98       	cbi	0x08, 5	; 8
 176:	ef e3       	ldi	r30, 0x3F	; 63
 178:	ff e1       	ldi	r31, 0x1F	; 31
 17a:	31 97       	sbiw	r30, 0x01	; 1
 17c:	f1 f7       	brne	.-4      	; 0x17a <lcd_write_character+0x42>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <lcd_write_character+0x48>
 180:	00 00       	nop
 182:	08 95       	ret

00000184 <lcd_write_word>:
	_delay_ms(1);
	CTL_BUS &=~(1<<LCD_EN);
	_delay_ms(1);
}
void lcd_write_word(uint8_t word[20])
{
 184:	cf 93       	push	r28
 186:	df 93       	push	r29
 188:	ec 01       	movw	r28, r24
	int i=0;
	while(word[i]!='\0')
 18a:	88 81       	ld	r24, Y
 18c:	88 23       	and	r24, r24
 18e:	31 f0       	breq	.+12     	; 0x19c <lcd_write_word+0x18>
 190:	21 96       	adiw	r28, 0x01	; 1
	{
		lcd_write_character(word[i]);
 192:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_write_character>
	_delay_ms(1);
}
void lcd_write_word(uint8_t word[20])
{
	int i=0;
	while(word[i]!='\0')
 196:	89 91       	ld	r24, Y+
 198:	81 11       	cpse	r24, r1
 19a:	fb cf       	rjmp	.-10     	; 0x192 <lcd_write_word+0xe>
	{
		lcd_write_character(word[i]);
		i++;
	}
}
 19c:	df 91       	pop	r29
 19e:	cf 91       	pop	r28
 1a0:	08 95       	ret

000001a2 <lcd_clear>:
	_delay_ms(2);
	
}
void lcd_clear(void)
{
	lcd_send_command(LCD_CMD_CLEAR_DISPLAY);
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_send_command>
 1a8:	08 95       	ret

000001aa <lcd_goto_xy>:
	
}
void lcd_goto_xy (uint8_t line,uint8_t pos)				//line = 0 or 1
{
	lcd_send_command((0x80|(line<<6))+pos);
 1aa:	20 e4       	ldi	r18, 0x40	; 64
 1ac:	82 9f       	mul	r24, r18
 1ae:	c0 01       	movw	r24, r0
 1b0:	11 24       	eor	r1, r1
 1b2:	80 68       	ori	r24, 0x80	; 128
 1b4:	86 0f       	add	r24, r22
 1b6:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_send_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ba:	87 ec       	ldi	r24, 0xC7	; 199
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	01 97       	sbiw	r24, 0x01	; 1
 1c0:	f1 f7       	brne	.-4      	; 0x1be <lcd_goto_xy+0x14>
 1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <lcd_goto_xy+0x1a>
 1c4:	00 00       	nop
 1c6:	08 95       	ret

000001c8 <USART_Init>:
		}
	}


	return freq;
}
 1c8:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 1cc:	87 e6       	ldi	r24, 0x67	; 103
 1ce:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 1d2:	86 e0       	ldi	r24, 0x06	; 6
 1d4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 1d8:	88 e1       	ldi	r24, 0x18	; 24
 1da:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 1de:	08 95       	ret

000001e0 <USART_TransmitChar>:
 1e0:	e0 ec       	ldi	r30, 0xC0	; 192
 1e2:	f0 e0       	ldi	r31, 0x00	; 0
 1e4:	90 81       	ld	r25, Z
 1e6:	95 ff       	sbrs	r25, 5
 1e8:	fd cf       	rjmp	.-6      	; 0x1e4 <USART_TransmitChar+0x4>
 1ea:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 1ee:	08 95       	ret

000001f0 <USART_TransmitString>:
 1f0:	cf 93       	push	r28
 1f2:	df 93       	push	r29
 1f4:	ec 01       	movw	r28, r24
 1f6:	88 81       	ld	r24, Y
 1f8:	88 23       	and	r24, r24
 1fa:	31 f0       	breq	.+12     	; 0x208 <USART_TransmitString+0x18>
 1fc:	21 96       	adiw	r28, 0x01	; 1
 1fe:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
 202:	89 91       	ld	r24, Y+
 204:	81 11       	cpse	r24, r1
 206:	fb cf       	rjmp	.-10     	; 0x1fe <USART_TransmitString+0xe>
 208:	df 91       	pop	r29
 20a:	cf 91       	pop	r28
 20c:	08 95       	ret

0000020e <USART_TransmitInteger>:
 20e:	0f 93       	push	r16
 210:	1f 93       	push	r17
 212:	cf 93       	push	r28
 214:	df 93       	push	r29
 216:	cd b7       	in	r28, 0x3d	; 61
 218:	de b7       	in	r29, 0x3e	; 62
 21a:	2a 97       	sbiw	r28, 0x0a	; 10
 21c:	0f b6       	in	r0, 0x3f	; 63
 21e:	f8 94       	cli
 220:	de bf       	out	0x3e, r29	; 62
 222:	0f be       	out	0x3f, r0	; 63
 224:	cd bf       	out	0x3d, r28	; 61
 226:	9f 93       	push	r25
 228:	8f 93       	push	r24
 22a:	82 e0       	ldi	r24, 0x02	; 2
 22c:	91 e0       	ldi	r25, 0x01	; 1
 22e:	9f 93       	push	r25
 230:	8f 93       	push	r24
 232:	8e 01       	movw	r16, r28
 234:	0f 5f       	subi	r16, 0xFF	; 255
 236:	1f 4f       	sbci	r17, 0xFF	; 255
 238:	1f 93       	push	r17
 23a:	0f 93       	push	r16
 23c:	0e 94 b7 04 	call	0x96e	; 0x96e <sprintf>
 240:	c8 01       	movw	r24, r16
 242:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <USART_TransmitString>
 246:	0f 90       	pop	r0
 248:	0f 90       	pop	r0
 24a:	0f 90       	pop	r0
 24c:	0f 90       	pop	r0
 24e:	0f 90       	pop	r0
 250:	0f 90       	pop	r0
 252:	2a 96       	adiw	r28, 0x0a	; 10
 254:	0f b6       	in	r0, 0x3f	; 63
 256:	f8 94       	cli
 258:	de bf       	out	0x3e, r29	; 62
 25a:	0f be       	out	0x3f, r0	; 63
 25c:	cd bf       	out	0x3d, r28	; 61
 25e:	df 91       	pop	r29
 260:	cf 91       	pop	r28
 262:	1f 91       	pop	r17
 264:	0f 91       	pop	r16
 266:	08 95       	ret

00000268 <USART_TransmitFixedPoint>:
 268:	8f 92       	push	r8
 26a:	9f 92       	push	r9
 26c:	af 92       	push	r10
 26e:	bf 92       	push	r11
 270:	cf 92       	push	r12
 272:	df 92       	push	r13
 274:	ef 92       	push	r14
 276:	ff 92       	push	r15
 278:	0f 93       	push	r16
 27a:	1f 93       	push	r17
 27c:	cf 93       	push	r28
 27e:	df 93       	push	r29
 280:	cd b7       	in	r28, 0x3d	; 61
 282:	de b7       	in	r29, 0x3e	; 62
 284:	2a 97       	sbiw	r28, 0x0a	; 10
 286:	0f b6       	in	r0, 0x3f	; 63
 288:	f8 94       	cli
 28a:	de bf       	out	0x3e, r29	; 62
 28c:	0f be       	out	0x3f, r0	; 63
 28e:	cd bf       	out	0x3d, r28	; 61
 290:	4b 01       	movw	r8, r22
 292:	5c 01       	movw	r10, r24
 294:	0e 94 86 03 	call	0x70c	; 0x70c <__fixsfsi>
 298:	6b 01       	movw	r12, r22
 29a:	7c 01       	movw	r14, r24
 29c:	20 e0       	ldi	r18, 0x00	; 0
 29e:	30 e4       	ldi	r19, 0x40	; 64
 2a0:	4c e1       	ldi	r20, 0x1C	; 28
 2a2:	56 e4       	ldi	r21, 0x46	; 70
 2a4:	c5 01       	movw	r24, r10
 2a6:	b4 01       	movw	r22, r8
 2a8:	0e 94 4a 04 	call	0x894	; 0x894 <__mulsf3>
 2ac:	4b 01       	movw	r8, r22
 2ae:	5c 01       	movw	r10, r24
 2b0:	80 e1       	ldi	r24, 0x10	; 16
 2b2:	97 e2       	ldi	r25, 0x27	; 39
 2b4:	8c 9d       	mul	r24, r12
 2b6:	b0 01       	movw	r22, r0
 2b8:	8d 9d       	mul	r24, r13
 2ba:	70 0d       	add	r23, r0
 2bc:	9c 9d       	mul	r25, r12
 2be:	70 0d       	add	r23, r0
 2c0:	11 24       	eor	r1, r1
 2c2:	07 2e       	mov	r0, r23
 2c4:	00 0c       	add	r0, r0
 2c6:	88 0b       	sbc	r24, r24
 2c8:	99 0b       	sbc	r25, r25
 2ca:	0e 94 be 03 	call	0x77c	; 0x77c <__floatsisf>
 2ce:	9b 01       	movw	r18, r22
 2d0:	ac 01       	movw	r20, r24
 2d2:	c5 01       	movw	r24, r10
 2d4:	b4 01       	movw	r22, r8
 2d6:	0e 94 19 03 	call	0x632	; 0x632 <__subsf3>
 2da:	0e 94 86 03 	call	0x70c	; 0x70c <__fixsfsi>
 2de:	7f 93       	push	r23
 2e0:	6f 93       	push	r22
 2e2:	df 92       	push	r13
 2e4:	cf 92       	push	r12
 2e6:	85 e0       	ldi	r24, 0x05	; 5
 2e8:	91 e0       	ldi	r25, 0x01	; 1
 2ea:	9f 93       	push	r25
 2ec:	8f 93       	push	r24
 2ee:	8e 01       	movw	r16, r28
 2f0:	0f 5f       	subi	r16, 0xFF	; 255
 2f2:	1f 4f       	sbci	r17, 0xFF	; 255
 2f4:	1f 93       	push	r17
 2f6:	0f 93       	push	r16
 2f8:	0e 94 b7 04 	call	0x96e	; 0x96e <sprintf>
 2fc:	c8 01       	movw	r24, r16
 2fe:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <USART_TransmitString>
 302:	0f b6       	in	r0, 0x3f	; 63
 304:	f8 94       	cli
 306:	de bf       	out	0x3e, r29	; 62
 308:	0f be       	out	0x3f, r0	; 63
 30a:	cd bf       	out	0x3d, r28	; 61
 30c:	2a 96       	adiw	r28, 0x0a	; 10
 30e:	0f b6       	in	r0, 0x3f	; 63
 310:	f8 94       	cli
 312:	de bf       	out	0x3e, r29	; 62
 314:	0f be       	out	0x3f, r0	; 63
 316:	cd bf       	out	0x3d, r28	; 61
 318:	df 91       	pop	r29
 31a:	cf 91       	pop	r28
 31c:	1f 91       	pop	r17
 31e:	0f 91       	pop	r16
 320:	ff 90       	pop	r15
 322:	ef 90       	pop	r14
 324:	df 90       	pop	r13
 326:	cf 90       	pop	r12
 328:	bf 90       	pop	r11
 32a:	af 90       	pop	r10
 32c:	9f 90       	pop	r9
 32e:	8f 90       	pop	r8
 330:	08 95       	ret

00000332 <__vector_1>:

uint8_t instrument = -1;
uint8_t bluetooth = -1;

ISR( INT0_vect )
{
 332:	1f 92       	push	r1
 334:	0f 92       	push	r0
 336:	0f b6       	in	r0, 0x3f	; 63
 338:	0f 92       	push	r0
 33a:	11 24       	eor	r1, r1
 33c:	2f 93       	push	r18
 33e:	3f 93       	push	r19
 340:	4f 93       	push	r20
 342:	5f 93       	push	r21
 344:	6f 93       	push	r22
 346:	7f 93       	push	r23
 348:	8f 93       	push	r24
 34a:	9f 93       	push	r25
 34c:	af 93       	push	r26
 34e:	bf 93       	push	r27
 350:	ef 93       	push	r30
 352:	ff 93       	push	r31
	if (PIND & (1 << PD2)) {
 354:	4a 9b       	sbis	0x09, 2	; 9
 356:	0b c0       	rjmp	.+22     	; 0x36e <__vector_1+0x3c>
		instrument=0;
 358:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <instrument>
		lcd_goto_xy(1, 0);
 35c:	60 e0       	ldi	r22, 0x00	; 0
 35e:	81 e0       	ldi	r24, 0x01	; 1
 360:	0e 94 d5 00 	call	0x1aa	; 0x1aa <lcd_goto_xy>
		lcd_write_word("Play Piano......");
 364:	8e e0       	ldi	r24, 0x0E	; 14
 366:	91 e0       	ldi	r25, 0x01	; 1
 368:	0e 94 c2 00 	call	0x184	; 0x184 <lcd_write_word>
 36c:	0a c0       	rjmp	.+20     	; 0x382 <__vector_1+0x50>
	}else{
		instrument=1;
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <instrument>
		lcd_goto_xy(1, 0);
 374:	60 e0       	ldi	r22, 0x00	; 0
 376:	0e 94 d5 00 	call	0x1aa	; 0x1aa <lcd_goto_xy>
		lcd_write_word("Play Violin.....");
 37a:	8f e1       	ldi	r24, 0x1F	; 31
 37c:	91 e0       	ldi	r25, 0x01	; 1
 37e:	0e 94 c2 00 	call	0x184	; 0x184 <lcd_write_word>
		
	}
	
}
 382:	ff 91       	pop	r31
 384:	ef 91       	pop	r30
 386:	bf 91       	pop	r27
 388:	af 91       	pop	r26
 38a:	9f 91       	pop	r25
 38c:	8f 91       	pop	r24
 38e:	7f 91       	pop	r23
 390:	6f 91       	pop	r22
 392:	5f 91       	pop	r21
 394:	4f 91       	pop	r20
 396:	3f 91       	pop	r19
 398:	2f 91       	pop	r18
 39a:	0f 90       	pop	r0
 39c:	0f be       	out	0x3f, r0	; 63
 39e:	0f 90       	pop	r0
 3a0:	1f 90       	pop	r1
 3a2:	18 95       	reti

000003a4 <__vector_2>:

ISR( INT1_vect )
{
 3a4:	1f 92       	push	r1
 3a6:	0f 92       	push	r0
 3a8:	0f b6       	in	r0, 0x3f	; 63
 3aa:	0f 92       	push	r0
 3ac:	11 24       	eor	r1, r1
 3ae:	2f 93       	push	r18
 3b0:	3f 93       	push	r19
 3b2:	4f 93       	push	r20
 3b4:	5f 93       	push	r21
 3b6:	6f 93       	push	r22
 3b8:	7f 93       	push	r23
 3ba:	8f 93       	push	r24
 3bc:	9f 93       	push	r25
 3be:	af 93       	push	r26
 3c0:	bf 93       	push	r27
 3c2:	ef 93       	push	r30
 3c4:	ff 93       	push	r31
	if (PIND & (1 << PD3)) {
 3c6:	4b 9b       	sbis	0x09, 3	; 9
 3c8:	0e c0       	rjmp	.+28     	; 0x3e6 <__vector_2+0x42>
		lcd_goto_xy(0, 0);
 3ca:	60 e0       	ldi	r22, 0x00	; 0
 3cc:	80 e0       	ldi	r24, 0x00	; 0
 3ce:	0e 94 d5 00 	call	0x1aa	; 0x1aa <lcd_goto_xy>
		lcd_write_word("Bluetooth.......");
 3d2:	80 e3       	ldi	r24, 0x30	; 48
 3d4:	91 e0       	ldi	r25, 0x01	; 1
 3d6:	0e 94 c2 00 	call	0x184	; 0x184 <lcd_write_word>
		USART_Init();
 3da:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <USART_Init>
		bluetooth=1;
 3de:	81 e0       	ldi	r24, 0x01	; 1
 3e0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 3e4:	0a c0       	rjmp	.+20     	; 0x3fa <__vector_2+0x56>
	}else{
		lcd_goto_xy(0, 0);
 3e6:	60 e0       	ldi	r22, 0x00	; 0
 3e8:	80 e0       	ldi	r24, 0x00	; 0
 3ea:	0e 94 d5 00 	call	0x1aa	; 0x1aa <lcd_goto_xy>
		lcd_write_word("Toy Piano Music!");
 3ee:	81 e4       	ldi	r24, 0x41	; 65
 3f0:	91 e0       	ldi	r25, 0x01	; 1
 3f2:	0e 94 c2 00 	call	0x184	; 0x184 <lcd_write_word>
		bluetooth=0;
 3f6:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
	}
}
 3fa:	ff 91       	pop	r31
 3fc:	ef 91       	pop	r30
 3fe:	bf 91       	pop	r27
 400:	af 91       	pop	r26
 402:	9f 91       	pop	r25
 404:	8f 91       	pop	r24
 406:	7f 91       	pop	r23
 408:	6f 91       	pop	r22
 40a:	5f 91       	pop	r21
 40c:	4f 91       	pop	r20
 40e:	3f 91       	pop	r19
 410:	2f 91       	pop	r18
 412:	0f 90       	pop	r0
 414:	0f be       	out	0x3f, r0	; 63
 416:	0f 90       	pop	r0
 418:	1f 90       	pop	r1
 41a:	18 95       	reti

0000041c <main>:

int main(void)
{

lcd_init();
 41c:	0e 94 71 00 	call	0xe2	; 0xe2 <lcd_init>
lcd_clear();
 420:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_clear>
 424:	84 ef       	ldi	r24, 0xF4	; 244
 426:	91 e0       	ldi	r25, 0x01	; 1
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 428:	20 e9       	ldi	r18, 0x90	; 144
 42a:	31 e0       	ldi	r19, 0x01	; 1
 42c:	f9 01       	movw	r30, r18
 42e:	31 97       	sbiw	r30, 0x01	; 1
 430:	f1 f7       	brne	.-4      	; 0x42e <main+0x12>
 432:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 434:	d9 f7       	brne	.-10     	; 0x42c <main+0x10>
_delay_ms (50);
lcd_goto_xy(1, 0);
 436:	60 e0       	ldi	r22, 0x00	; 0
 438:	81 e0       	ldi	r24, 0x01	; 1
 43a:	0e 94 d5 00 	call	0x1aa	; 0x1aa <lcd_goto_xy>
lcd_write_word("Play Piano......");
 43e:	8e e0       	ldi	r24, 0x0E	; 14
 440:	91 e0       	ldi	r25, 0x01	; 1
 442:	0e 94 c2 00 	call	0x184	; 0x184 <lcd_write_word>

USART_Init();
 446:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <USART_Init>
 44a:	c0 e9       	ldi	r28, 0x90	; 144
 44c:	d1 e0       	ldi	r29, 0x01	; 1

int main(void)
{

lcd_init();
lcd_clear();
 44e:	08 ec       	ldi	r16, 0xC8	; 200
 450:	10 e0       	ldi	r17, 0x00	; 0
lcd_write_word("Play Piano......");

USART_Init();
while (1) {
	for(int i=0;i<200;i++){
		USART_TransmitInteger(0);
 452:	80 e0       	ldi	r24, 0x00	; 0
 454:	90 e0       	ldi	r25, 0x00	; 0
 456:	0e 94 07 01 	call	0x20e	; 0x20e <USART_TransmitInteger>
		USART_TransmitChar(' ');
 45a:	80 e2       	ldi	r24, 0x20	; 32
 45c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
		USART_TransmitFixedPoint(2.8641);
 460:	6a e6       	ldi	r22, 0x6A	; 106
 462:	7d e4       	ldi	r23, 0x4D	; 77
 464:	87 e3       	ldi	r24, 0x37	; 55
 466:	90 e4       	ldi	r25, 0x40	; 64
 468:	0e 94 34 01 	call	0x268	; 0x268 <USART_TransmitFixedPoint>
		USART_TransmitChar('\r'); // Carriage return
 46c:	8d e0       	ldi	r24, 0x0D	; 13
 46e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
		USART_TransmitChar('\n');
 472:	8a e0       	ldi	r24, 0x0A	; 10
 474:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
 478:	01 50       	subi	r16, 0x01	; 1
 47a:	11 09       	sbc	r17, r1
lcd_goto_xy(1, 0);
lcd_write_word("Play Piano......");

USART_Init();
while (1) {
	for(int i=0;i<200;i++){
 47c:	51 f7       	brne	.-44     	; 0x452 <main+0x36>
 47e:	80 e1       	ldi	r24, 0x10	; 16
 480:	97 e2       	ldi	r25, 0x27	; 39
 482:	fe 01       	movw	r30, r28
 484:	31 97       	sbiw	r30, 0x01	; 1
 486:	f1 f7       	brne	.-4      	; 0x484 <main+0x68>
 488:	01 97       	sbiw	r24, 0x01	; 1
 48a:	d9 f7       	brne	.-10     	; 0x482 <main+0x66>
 48c:	08 ec       	ldi	r16, 0xC8	; 200
 48e:	10 e0       	ldi	r17, 0x00	; 0
		USART_TransmitChar('\r'); // Carriage return
		USART_TransmitChar('\n');
	}
	_delay_ms(1000);
	for(int i=0;i<200;i++){
	USART_TransmitInteger(0);
 490:	80 e0       	ldi	r24, 0x00	; 0
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	0e 94 07 01 	call	0x20e	; 0x20e <USART_TransmitInteger>
	USART_TransmitChar(' ');
 498:	80 e2       	ldi	r24, 0x20	; 32
 49a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
	USART_TransmitFixedPoint(2.7027);
 49e:	69 e0       	ldi	r22, 0x09	; 9
 4a0:	79 ef       	ldi	r23, 0xF9	; 249
 4a2:	8c e2       	ldi	r24, 0x2C	; 44
 4a4:	90 e4       	ldi	r25, 0x40	; 64
 4a6:	0e 94 34 01 	call	0x268	; 0x268 <USART_TransmitFixedPoint>
	USART_TransmitChar('\r'); // Carriage return
 4aa:	8d e0       	ldi	r24, 0x0D	; 13
 4ac:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
	USART_TransmitChar('\n');
 4b0:	8a e0       	ldi	r24, 0x0A	; 10
 4b2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
 4b6:	01 50       	subi	r16, 0x01	; 1
 4b8:	11 09       	sbc	r17, r1
		USART_TransmitFixedPoint(2.8641);
		USART_TransmitChar('\r'); // Carriage return
		USART_TransmitChar('\n');
	}
	_delay_ms(1000);
	for(int i=0;i<200;i++){
 4ba:	51 f7       	brne	.-44     	; 0x490 <main+0x74>
 4bc:	80 e1       	ldi	r24, 0x10	; 16
 4be:	97 e2       	ldi	r25, 0x27	; 39
 4c0:	fe 01       	movw	r30, r28
 4c2:	31 97       	sbiw	r30, 0x01	; 1
 4c4:	f1 f7       	brne	.-4      	; 0x4c2 <main+0xa6>
 4c6:	01 97       	sbiw	r24, 0x01	; 1
 4c8:	d9 f7       	brne	.-10     	; 0x4c0 <main+0xa4>
 4ca:	08 ec       	ldi	r16, 0xC8	; 200
 4cc:	10 e0       	ldi	r17, 0x00	; 0
	USART_TransmitChar('\r'); // Carriage return
	USART_TransmitChar('\n');
	}
	_delay_ms(1000);
	for(int i=0;i<200;i++){
	USART_TransmitInteger(0);
 4ce:	80 e0       	ldi	r24, 0x00	; 0
 4d0:	90 e0       	ldi	r25, 0x00	; 0
 4d2:	0e 94 07 01 	call	0x20e	; 0x20e <USART_TransmitInteger>
	USART_TransmitChar(' ');
 4d6:	80 e2       	ldi	r24, 0x20	; 32
 4d8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
	USART_TransmitFixedPoint(2.5510);
 4dc:	66 e9       	ldi	r22, 0x96	; 150
 4de:	73 e4       	ldi	r23, 0x43	; 67
 4e0:	83 e2       	ldi	r24, 0x23	; 35
 4e2:	90 e4       	ldi	r25, 0x40	; 64
 4e4:	0e 94 34 01 	call	0x268	; 0x268 <USART_TransmitFixedPoint>
	USART_TransmitChar('\r'); // Carriage return
 4e8:	8d e0       	ldi	r24, 0x0D	; 13
 4ea:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
	USART_TransmitChar('\n');
 4ee:	8a e0       	ldi	r24, 0x0A	; 10
 4f0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
 4f4:	01 50       	subi	r16, 0x01	; 1
 4f6:	11 09       	sbc	r17, r1
	USART_TransmitFixedPoint(2.7027);
	USART_TransmitChar('\r'); // Carriage return
	USART_TransmitChar('\n');
	}
	_delay_ms(1000);
	for(int i=0;i<200;i++){
 4f8:	51 f7       	brne	.-44     	; 0x4ce <main+0xb2>
 4fa:	80 e1       	ldi	r24, 0x10	; 16
 4fc:	97 e2       	ldi	r25, 0x27	; 39
 4fe:	fe 01       	movw	r30, r28
 500:	31 97       	sbiw	r30, 0x01	; 1
 502:	f1 f7       	brne	.-4      	; 0x500 <main+0xe4>
 504:	01 97       	sbiw	r24, 0x01	; 1
 506:	d9 f7       	brne	.-10     	; 0x4fe <main+0xe2>
 508:	08 ec       	ldi	r16, 0xC8	; 200
 50a:	10 e0       	ldi	r17, 0x00	; 0
	USART_TransmitChar('\r'); // Carriage return
	USART_TransmitChar('\n');
	}
	_delay_ms(1000);
	for(int i=0;i<200;i++){
	USART_TransmitInteger(0);
 50c:	80 e0       	ldi	r24, 0x00	; 0
 50e:	90 e0       	ldi	r25, 0x00	; 0
 510:	0e 94 07 01 	call	0x20e	; 0x20e <USART_TransmitInteger>
	USART_TransmitChar(' ');
 514:	80 e2       	ldi	r24, 0x20	; 32
 516:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
	USART_TransmitFixedPoint(0.7163);
 51a:	60 e7       	ldi	r22, 0x70	; 112
 51c:	7f e5       	ldi	r23, 0x5F	; 95
 51e:	87 e3       	ldi	r24, 0x37	; 55
 520:	9f e3       	ldi	r25, 0x3F	; 63
 522:	0e 94 34 01 	call	0x268	; 0x268 <USART_TransmitFixedPoint>
	USART_TransmitChar('\r'); // Carriage return
 526:	8d e0       	ldi	r24, 0x0D	; 13
 528:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
	USART_TransmitChar('\n');
 52c:	8a e0       	ldi	r24, 0x0A	; 10
 52e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
 532:	01 50       	subi	r16, 0x01	; 1
 534:	11 09       	sbc	r17, r1
	USART_TransmitFixedPoint(2.5510);
	USART_TransmitChar('\r'); // Carriage return
	USART_TransmitChar('\n');
	}
	_delay_ms(1000);
	for(int i=0;i<200;i++){
 536:	51 f7       	brne	.-44     	; 0x50c <main+0xf0>
 538:	80 e3       	ldi	r24, 0x30	; 48
 53a:	95 e7       	ldi	r25, 0x75	; 117
 53c:	fe 01       	movw	r30, r28
 53e:	31 97       	sbiw	r30, 0x01	; 1
 540:	f1 f7       	brne	.-4      	; 0x53e <main+0x122>
 542:	01 97       	sbiw	r24, 0x01	; 1
 544:	d9 f7       	brne	.-10     	; 0x53c <main+0x120>
 546:	08 ec       	ldi	r16, 0xC8	; 200
 548:	10 e0       	ldi	r17, 0x00	; 0
	USART_TransmitChar('\r'); // Carriage return
	USART_TransmitChar('\n');
	}
	_delay_ms(3000);
	for(int i=0;i<200;i++){
		USART_TransmitInteger(1);
 54a:	81 e0       	ldi	r24, 0x01	; 1
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	0e 94 07 01 	call	0x20e	; 0x20e <USART_TransmitInteger>
		USART_TransmitChar(' ');
 552:	80 e2       	ldi	r24, 0x20	; 32
 554:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
		USART_TransmitFixedPoint(2.8641);
 558:	6a e6       	ldi	r22, 0x6A	; 106
 55a:	7d e4       	ldi	r23, 0x4D	; 77
 55c:	87 e3       	ldi	r24, 0x37	; 55
 55e:	90 e4       	ldi	r25, 0x40	; 64
 560:	0e 94 34 01 	call	0x268	; 0x268 <USART_TransmitFixedPoint>
		USART_TransmitChar('\r'); // Carriage return
 564:	8d e0       	ldi	r24, 0x0D	; 13
 566:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
		USART_TransmitChar('\n');
 56a:	8a e0       	ldi	r24, 0x0A	; 10
 56c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
 570:	01 50       	subi	r16, 0x01	; 1
 572:	11 09       	sbc	r17, r1
	USART_TransmitFixedPoint(0.7163);
	USART_TransmitChar('\r'); // Carriage return
	USART_TransmitChar('\n');
	}
	_delay_ms(3000);
	for(int i=0;i<200;i++){
 574:	51 f7       	brne	.-44     	; 0x54a <main+0x12e>
 576:	80 e1       	ldi	r24, 0x10	; 16
 578:	97 e2       	ldi	r25, 0x27	; 39
 57a:	fe 01       	movw	r30, r28
 57c:	31 97       	sbiw	r30, 0x01	; 1
 57e:	f1 f7       	brne	.-4      	; 0x57c <main+0x160>
 580:	01 97       	sbiw	r24, 0x01	; 1
 582:	d9 f7       	brne	.-10     	; 0x57a <main+0x15e>
 584:	08 ec       	ldi	r16, 0xC8	; 200
 586:	10 e0       	ldi	r17, 0x00	; 0
		USART_TransmitChar('\r'); // Carriage return
		USART_TransmitChar('\n');
	}
	_delay_ms(1000);
	for(int i=0;i<200;i++){
		USART_TransmitInteger(1);
 588:	81 e0       	ldi	r24, 0x01	; 1
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	0e 94 07 01 	call	0x20e	; 0x20e <USART_TransmitInteger>
		USART_TransmitChar(' ');
 590:	80 e2       	ldi	r24, 0x20	; 32
 592:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
		USART_TransmitFixedPoint(2.7027);
 596:	69 e0       	ldi	r22, 0x09	; 9
 598:	79 ef       	ldi	r23, 0xF9	; 249
 59a:	8c e2       	ldi	r24, 0x2C	; 44
 59c:	90 e4       	ldi	r25, 0x40	; 64
 59e:	0e 94 34 01 	call	0x268	; 0x268 <USART_TransmitFixedPoint>
		USART_TransmitChar('\r'); // Carriage return
 5a2:	8d e0       	ldi	r24, 0x0D	; 13
 5a4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
		USART_TransmitChar('\n');
 5a8:	8a e0       	ldi	r24, 0x0A	; 10
 5aa:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
 5ae:	01 50       	subi	r16, 0x01	; 1
 5b0:	11 09       	sbc	r17, r1
		USART_TransmitFixedPoint(2.8641);
		USART_TransmitChar('\r'); // Carriage return
		USART_TransmitChar('\n');
	}
	_delay_ms(1000);
	for(int i=0;i<200;i++){
 5b2:	51 f7       	brne	.-44     	; 0x588 <main+0x16c>
 5b4:	80 e1       	ldi	r24, 0x10	; 16
 5b6:	97 e2       	ldi	r25, 0x27	; 39
 5b8:	fe 01       	movw	r30, r28
 5ba:	31 97       	sbiw	r30, 0x01	; 1
 5bc:	f1 f7       	brne	.-4      	; 0x5ba <main+0x19e>
 5be:	01 97       	sbiw	r24, 0x01	; 1
 5c0:	d9 f7       	brne	.-10     	; 0x5b8 <main+0x19c>
 5c2:	08 ec       	ldi	r16, 0xC8	; 200
 5c4:	10 e0       	ldi	r17, 0x00	; 0
		USART_TransmitChar('\r'); // Carriage return
		USART_TransmitChar('\n');
	}
	_delay_ms(1000);
	for(int i=0;i<200;i++){
		USART_TransmitInteger(1);
 5c6:	81 e0       	ldi	r24, 0x01	; 1
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	0e 94 07 01 	call	0x20e	; 0x20e <USART_TransmitInteger>
		USART_TransmitChar(' ');
 5ce:	80 e2       	ldi	r24, 0x20	; 32
 5d0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
		USART_TransmitFixedPoint(2.5510);
 5d4:	66 e9       	ldi	r22, 0x96	; 150
 5d6:	73 e4       	ldi	r23, 0x43	; 67
 5d8:	83 e2       	ldi	r24, 0x23	; 35
 5da:	90 e4       	ldi	r25, 0x40	; 64
 5dc:	0e 94 34 01 	call	0x268	; 0x268 <USART_TransmitFixedPoint>
		USART_TransmitChar('\r'); // Carriage return
 5e0:	8d e0       	ldi	r24, 0x0D	; 13
 5e2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
		USART_TransmitChar('\n');
 5e6:	8a e0       	ldi	r24, 0x0A	; 10
 5e8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
 5ec:	01 50       	subi	r16, 0x01	; 1
 5ee:	11 09       	sbc	r17, r1
		USART_TransmitFixedPoint(2.7027);
		USART_TransmitChar('\r'); // Carriage return
		USART_TransmitChar('\n');
	}
	_delay_ms(1000);
	for(int i=0;i<200;i++){
 5f0:	51 f7       	brne	.-44     	; 0x5c6 <main+0x1aa>
 5f2:	80 e1       	ldi	r24, 0x10	; 16
 5f4:	97 e2       	ldi	r25, 0x27	; 39
 5f6:	fe 01       	movw	r30, r28
 5f8:	31 97       	sbiw	r30, 0x01	; 1
 5fa:	f1 f7       	brne	.-4      	; 0x5f8 <main+0x1dc>
 5fc:	01 97       	sbiw	r24, 0x01	; 1
 5fe:	d9 f7       	brne	.-10     	; 0x5f6 <main+0x1da>
 600:	08 ec       	ldi	r16, 0xC8	; 200
 602:	10 e0       	ldi	r17, 0x00	; 0
		USART_TransmitChar('\r'); // Carriage return
		USART_TransmitChar('\n');
	}
	_delay_ms(1000);
	for(int i=0;i<200;i++){
		USART_TransmitInteger(1);
 604:	81 e0       	ldi	r24, 0x01	; 1
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	0e 94 07 01 	call	0x20e	; 0x20e <USART_TransmitInteger>
		USART_TransmitChar(' ');
 60c:	80 e2       	ldi	r24, 0x20	; 32
 60e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
		USART_TransmitFixedPoint(0.7163);
 612:	60 e7       	ldi	r22, 0x70	; 112
 614:	7f e5       	ldi	r23, 0x5F	; 95
 616:	87 e3       	ldi	r24, 0x37	; 55
 618:	9f e3       	ldi	r25, 0x3F	; 63
 61a:	0e 94 34 01 	call	0x268	; 0x268 <USART_TransmitFixedPoint>
		USART_TransmitChar('\r'); // Carriage return
 61e:	8d e0       	ldi	r24, 0x0D	; 13
 620:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
		USART_TransmitChar('\n');
 624:	8a e0       	ldi	r24, 0x0A	; 10
 626:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <USART_TransmitChar>
 62a:	01 50       	subi	r16, 0x01	; 1
 62c:	11 09       	sbc	r17, r1
		USART_TransmitFixedPoint(2.5510);
		USART_TransmitChar('\r'); // Carriage return
		USART_TransmitChar('\n');
	}
	_delay_ms(1000);
	for(int i=0;i<200;i++){
 62e:	51 f7       	brne	.-44     	; 0x604 <main+0x1e8>
 630:	0e cf       	rjmp	.-484    	; 0x44e <main+0x32>

00000632 <__subsf3>:
 632:	50 58       	subi	r21, 0x80	; 128

00000634 <__addsf3>:
 634:	bb 27       	eor	r27, r27
 636:	aa 27       	eor	r26, r26
 638:	0e 94 31 03 	call	0x662	; 0x662 <__addsf3x>
 63c:	0c 94 10 04 	jmp	0x820	; 0x820 <__fp_round>
 640:	0e 94 02 04 	call	0x804	; 0x804 <__fp_pscA>
 644:	38 f0       	brcs	.+14     	; 0x654 <__addsf3+0x20>
 646:	0e 94 09 04 	call	0x812	; 0x812 <__fp_pscB>
 64a:	20 f0       	brcs	.+8      	; 0x654 <__addsf3+0x20>
 64c:	39 f4       	brne	.+14     	; 0x65c <__addsf3+0x28>
 64e:	9f 3f       	cpi	r25, 0xFF	; 255
 650:	19 f4       	brne	.+6      	; 0x658 <__addsf3+0x24>
 652:	26 f4       	brtc	.+8      	; 0x65c <__addsf3+0x28>
 654:	0c 94 ff 03 	jmp	0x7fe	; 0x7fe <__fp_nan>
 658:	0e f4       	brtc	.+2      	; 0x65c <__addsf3+0x28>
 65a:	e0 95       	com	r30
 65c:	e7 fb       	bst	r30, 7
 65e:	0c 94 f9 03 	jmp	0x7f2	; 0x7f2 <__fp_inf>

00000662 <__addsf3x>:
 662:	e9 2f       	mov	r30, r25
 664:	0e 94 21 04 	call	0x842	; 0x842 <__fp_split3>
 668:	58 f3       	brcs	.-42     	; 0x640 <__addsf3+0xc>
 66a:	ba 17       	cp	r27, r26
 66c:	62 07       	cpc	r22, r18
 66e:	73 07       	cpc	r23, r19
 670:	84 07       	cpc	r24, r20
 672:	95 07       	cpc	r25, r21
 674:	20 f0       	brcs	.+8      	; 0x67e <__addsf3x+0x1c>
 676:	79 f4       	brne	.+30     	; 0x696 <__addsf3x+0x34>
 678:	a6 f5       	brtc	.+104    	; 0x6e2 <__addsf3x+0x80>
 67a:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_zero>
 67e:	0e f4       	brtc	.+2      	; 0x682 <__addsf3x+0x20>
 680:	e0 95       	com	r30
 682:	0b 2e       	mov	r0, r27
 684:	ba 2f       	mov	r27, r26
 686:	a0 2d       	mov	r26, r0
 688:	0b 01       	movw	r0, r22
 68a:	b9 01       	movw	r22, r18
 68c:	90 01       	movw	r18, r0
 68e:	0c 01       	movw	r0, r24
 690:	ca 01       	movw	r24, r20
 692:	a0 01       	movw	r20, r0
 694:	11 24       	eor	r1, r1
 696:	ff 27       	eor	r31, r31
 698:	59 1b       	sub	r21, r25
 69a:	99 f0       	breq	.+38     	; 0x6c2 <__addsf3x+0x60>
 69c:	59 3f       	cpi	r21, 0xF9	; 249
 69e:	50 f4       	brcc	.+20     	; 0x6b4 <__addsf3x+0x52>
 6a0:	50 3e       	cpi	r21, 0xE0	; 224
 6a2:	68 f1       	brcs	.+90     	; 0x6fe <__addsf3x+0x9c>
 6a4:	1a 16       	cp	r1, r26
 6a6:	f0 40       	sbci	r31, 0x00	; 0
 6a8:	a2 2f       	mov	r26, r18
 6aa:	23 2f       	mov	r18, r19
 6ac:	34 2f       	mov	r19, r20
 6ae:	44 27       	eor	r20, r20
 6b0:	58 5f       	subi	r21, 0xF8	; 248
 6b2:	f3 cf       	rjmp	.-26     	; 0x69a <__addsf3x+0x38>
 6b4:	46 95       	lsr	r20
 6b6:	37 95       	ror	r19
 6b8:	27 95       	ror	r18
 6ba:	a7 95       	ror	r26
 6bc:	f0 40       	sbci	r31, 0x00	; 0
 6be:	53 95       	inc	r21
 6c0:	c9 f7       	brne	.-14     	; 0x6b4 <__addsf3x+0x52>
 6c2:	7e f4       	brtc	.+30     	; 0x6e2 <__addsf3x+0x80>
 6c4:	1f 16       	cp	r1, r31
 6c6:	ba 0b       	sbc	r27, r26
 6c8:	62 0b       	sbc	r22, r18
 6ca:	73 0b       	sbc	r23, r19
 6cc:	84 0b       	sbc	r24, r20
 6ce:	ba f0       	brmi	.+46     	; 0x6fe <__addsf3x+0x9c>
 6d0:	91 50       	subi	r25, 0x01	; 1
 6d2:	a1 f0       	breq	.+40     	; 0x6fc <__addsf3x+0x9a>
 6d4:	ff 0f       	add	r31, r31
 6d6:	bb 1f       	adc	r27, r27
 6d8:	66 1f       	adc	r22, r22
 6da:	77 1f       	adc	r23, r23
 6dc:	88 1f       	adc	r24, r24
 6de:	c2 f7       	brpl	.-16     	; 0x6d0 <__addsf3x+0x6e>
 6e0:	0e c0       	rjmp	.+28     	; 0x6fe <__addsf3x+0x9c>
 6e2:	ba 0f       	add	r27, r26
 6e4:	62 1f       	adc	r22, r18
 6e6:	73 1f       	adc	r23, r19
 6e8:	84 1f       	adc	r24, r20
 6ea:	48 f4       	brcc	.+18     	; 0x6fe <__addsf3x+0x9c>
 6ec:	87 95       	ror	r24
 6ee:	77 95       	ror	r23
 6f0:	67 95       	ror	r22
 6f2:	b7 95       	ror	r27
 6f4:	f7 95       	ror	r31
 6f6:	9e 3f       	cpi	r25, 0xFE	; 254
 6f8:	08 f0       	brcs	.+2      	; 0x6fc <__addsf3x+0x9a>
 6fa:	b0 cf       	rjmp	.-160    	; 0x65c <__addsf3+0x28>
 6fc:	93 95       	inc	r25
 6fe:	88 0f       	add	r24, r24
 700:	08 f0       	brcs	.+2      	; 0x704 <__addsf3x+0xa2>
 702:	99 27       	eor	r25, r25
 704:	ee 0f       	add	r30, r30
 706:	97 95       	ror	r25
 708:	87 95       	ror	r24
 70a:	08 95       	ret

0000070c <__fixsfsi>:
 70c:	0e 94 8d 03 	call	0x71a	; 0x71a <__fixunssfsi>
 710:	68 94       	set
 712:	b1 11       	cpse	r27, r1
 714:	0c 94 44 04 	jmp	0x888	; 0x888 <__fp_szero>
 718:	08 95       	ret

0000071a <__fixunssfsi>:
 71a:	0e 94 29 04 	call	0x852	; 0x852 <__fp_splitA>
 71e:	88 f0       	brcs	.+34     	; 0x742 <__fixunssfsi+0x28>
 720:	9f 57       	subi	r25, 0x7F	; 127
 722:	98 f0       	brcs	.+38     	; 0x74a <__fixunssfsi+0x30>
 724:	b9 2f       	mov	r27, r25
 726:	99 27       	eor	r25, r25
 728:	b7 51       	subi	r27, 0x17	; 23
 72a:	b0 f0       	brcs	.+44     	; 0x758 <__fixunssfsi+0x3e>
 72c:	e1 f0       	breq	.+56     	; 0x766 <__fixunssfsi+0x4c>
 72e:	66 0f       	add	r22, r22
 730:	77 1f       	adc	r23, r23
 732:	88 1f       	adc	r24, r24
 734:	99 1f       	adc	r25, r25
 736:	1a f0       	brmi	.+6      	; 0x73e <__fixunssfsi+0x24>
 738:	ba 95       	dec	r27
 73a:	c9 f7       	brne	.-14     	; 0x72e <__fixunssfsi+0x14>
 73c:	14 c0       	rjmp	.+40     	; 0x766 <__fixunssfsi+0x4c>
 73e:	b1 30       	cpi	r27, 0x01	; 1
 740:	91 f0       	breq	.+36     	; 0x766 <__fixunssfsi+0x4c>
 742:	0e 94 43 04 	call	0x886	; 0x886 <__fp_zero>
 746:	b1 e0       	ldi	r27, 0x01	; 1
 748:	08 95       	ret
 74a:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_zero>
 74e:	67 2f       	mov	r22, r23
 750:	78 2f       	mov	r23, r24
 752:	88 27       	eor	r24, r24
 754:	b8 5f       	subi	r27, 0xF8	; 248
 756:	39 f0       	breq	.+14     	; 0x766 <__fixunssfsi+0x4c>
 758:	b9 3f       	cpi	r27, 0xF9	; 249
 75a:	cc f3       	brlt	.-14     	; 0x74e <__fixunssfsi+0x34>
 75c:	86 95       	lsr	r24
 75e:	77 95       	ror	r23
 760:	67 95       	ror	r22
 762:	b3 95       	inc	r27
 764:	d9 f7       	brne	.-10     	; 0x75c <__fixunssfsi+0x42>
 766:	3e f4       	brtc	.+14     	; 0x776 <__fixunssfsi+0x5c>
 768:	90 95       	com	r25
 76a:	80 95       	com	r24
 76c:	70 95       	com	r23
 76e:	61 95       	neg	r22
 770:	7f 4f       	sbci	r23, 0xFF	; 255
 772:	8f 4f       	sbci	r24, 0xFF	; 255
 774:	9f 4f       	sbci	r25, 0xFF	; 255
 776:	08 95       	ret

00000778 <__floatunsisf>:
 778:	e8 94       	clt
 77a:	09 c0       	rjmp	.+18     	; 0x78e <__floatsisf+0x12>

0000077c <__floatsisf>:
 77c:	97 fb       	bst	r25, 7
 77e:	3e f4       	brtc	.+14     	; 0x78e <__floatsisf+0x12>
 780:	90 95       	com	r25
 782:	80 95       	com	r24
 784:	70 95       	com	r23
 786:	61 95       	neg	r22
 788:	7f 4f       	sbci	r23, 0xFF	; 255
 78a:	8f 4f       	sbci	r24, 0xFF	; 255
 78c:	9f 4f       	sbci	r25, 0xFF	; 255
 78e:	99 23       	and	r25, r25
 790:	a9 f0       	breq	.+42     	; 0x7bc <__floatsisf+0x40>
 792:	f9 2f       	mov	r31, r25
 794:	96 e9       	ldi	r25, 0x96	; 150
 796:	bb 27       	eor	r27, r27
 798:	93 95       	inc	r25
 79a:	f6 95       	lsr	r31
 79c:	87 95       	ror	r24
 79e:	77 95       	ror	r23
 7a0:	67 95       	ror	r22
 7a2:	b7 95       	ror	r27
 7a4:	f1 11       	cpse	r31, r1
 7a6:	f8 cf       	rjmp	.-16     	; 0x798 <__floatsisf+0x1c>
 7a8:	fa f4       	brpl	.+62     	; 0x7e8 <__floatsisf+0x6c>
 7aa:	bb 0f       	add	r27, r27
 7ac:	11 f4       	brne	.+4      	; 0x7b2 <__floatsisf+0x36>
 7ae:	60 ff       	sbrs	r22, 0
 7b0:	1b c0       	rjmp	.+54     	; 0x7e8 <__floatsisf+0x6c>
 7b2:	6f 5f       	subi	r22, 0xFF	; 255
 7b4:	7f 4f       	sbci	r23, 0xFF	; 255
 7b6:	8f 4f       	sbci	r24, 0xFF	; 255
 7b8:	9f 4f       	sbci	r25, 0xFF	; 255
 7ba:	16 c0       	rjmp	.+44     	; 0x7e8 <__floatsisf+0x6c>
 7bc:	88 23       	and	r24, r24
 7be:	11 f0       	breq	.+4      	; 0x7c4 <__floatsisf+0x48>
 7c0:	96 e9       	ldi	r25, 0x96	; 150
 7c2:	11 c0       	rjmp	.+34     	; 0x7e6 <__floatsisf+0x6a>
 7c4:	77 23       	and	r23, r23
 7c6:	21 f0       	breq	.+8      	; 0x7d0 <__floatsisf+0x54>
 7c8:	9e e8       	ldi	r25, 0x8E	; 142
 7ca:	87 2f       	mov	r24, r23
 7cc:	76 2f       	mov	r23, r22
 7ce:	05 c0       	rjmp	.+10     	; 0x7da <__floatsisf+0x5e>
 7d0:	66 23       	and	r22, r22
 7d2:	71 f0       	breq	.+28     	; 0x7f0 <__floatsisf+0x74>
 7d4:	96 e8       	ldi	r25, 0x86	; 134
 7d6:	86 2f       	mov	r24, r22
 7d8:	70 e0       	ldi	r23, 0x00	; 0
 7da:	60 e0       	ldi	r22, 0x00	; 0
 7dc:	2a f0       	brmi	.+10     	; 0x7e8 <__floatsisf+0x6c>
 7de:	9a 95       	dec	r25
 7e0:	66 0f       	add	r22, r22
 7e2:	77 1f       	adc	r23, r23
 7e4:	88 1f       	adc	r24, r24
 7e6:	da f7       	brpl	.-10     	; 0x7de <__floatsisf+0x62>
 7e8:	88 0f       	add	r24, r24
 7ea:	96 95       	lsr	r25
 7ec:	87 95       	ror	r24
 7ee:	97 f9       	bld	r25, 7
 7f0:	08 95       	ret

000007f2 <__fp_inf>:
 7f2:	97 f9       	bld	r25, 7
 7f4:	9f 67       	ori	r25, 0x7F	; 127
 7f6:	80 e8       	ldi	r24, 0x80	; 128
 7f8:	70 e0       	ldi	r23, 0x00	; 0
 7fa:	60 e0       	ldi	r22, 0x00	; 0
 7fc:	08 95       	ret

000007fe <__fp_nan>:
 7fe:	9f ef       	ldi	r25, 0xFF	; 255
 800:	80 ec       	ldi	r24, 0xC0	; 192
 802:	08 95       	ret

00000804 <__fp_pscA>:
 804:	00 24       	eor	r0, r0
 806:	0a 94       	dec	r0
 808:	16 16       	cp	r1, r22
 80a:	17 06       	cpc	r1, r23
 80c:	18 06       	cpc	r1, r24
 80e:	09 06       	cpc	r0, r25
 810:	08 95       	ret

00000812 <__fp_pscB>:
 812:	00 24       	eor	r0, r0
 814:	0a 94       	dec	r0
 816:	12 16       	cp	r1, r18
 818:	13 06       	cpc	r1, r19
 81a:	14 06       	cpc	r1, r20
 81c:	05 06       	cpc	r0, r21
 81e:	08 95       	ret

00000820 <__fp_round>:
 820:	09 2e       	mov	r0, r25
 822:	03 94       	inc	r0
 824:	00 0c       	add	r0, r0
 826:	11 f4       	brne	.+4      	; 0x82c <__fp_round+0xc>
 828:	88 23       	and	r24, r24
 82a:	52 f0       	brmi	.+20     	; 0x840 <__fp_round+0x20>
 82c:	bb 0f       	add	r27, r27
 82e:	40 f4       	brcc	.+16     	; 0x840 <__fp_round+0x20>
 830:	bf 2b       	or	r27, r31
 832:	11 f4       	brne	.+4      	; 0x838 <__fp_round+0x18>
 834:	60 ff       	sbrs	r22, 0
 836:	04 c0       	rjmp	.+8      	; 0x840 <__fp_round+0x20>
 838:	6f 5f       	subi	r22, 0xFF	; 255
 83a:	7f 4f       	sbci	r23, 0xFF	; 255
 83c:	8f 4f       	sbci	r24, 0xFF	; 255
 83e:	9f 4f       	sbci	r25, 0xFF	; 255
 840:	08 95       	ret

00000842 <__fp_split3>:
 842:	57 fd       	sbrc	r21, 7
 844:	90 58       	subi	r25, 0x80	; 128
 846:	44 0f       	add	r20, r20
 848:	55 1f       	adc	r21, r21
 84a:	59 f0       	breq	.+22     	; 0x862 <__fp_splitA+0x10>
 84c:	5f 3f       	cpi	r21, 0xFF	; 255
 84e:	71 f0       	breq	.+28     	; 0x86c <__fp_splitA+0x1a>
 850:	47 95       	ror	r20

00000852 <__fp_splitA>:
 852:	88 0f       	add	r24, r24
 854:	97 fb       	bst	r25, 7
 856:	99 1f       	adc	r25, r25
 858:	61 f0       	breq	.+24     	; 0x872 <__fp_splitA+0x20>
 85a:	9f 3f       	cpi	r25, 0xFF	; 255
 85c:	79 f0       	breq	.+30     	; 0x87c <__fp_splitA+0x2a>
 85e:	87 95       	ror	r24
 860:	08 95       	ret
 862:	12 16       	cp	r1, r18
 864:	13 06       	cpc	r1, r19
 866:	14 06       	cpc	r1, r20
 868:	55 1f       	adc	r21, r21
 86a:	f2 cf       	rjmp	.-28     	; 0x850 <__fp_split3+0xe>
 86c:	46 95       	lsr	r20
 86e:	f1 df       	rcall	.-30     	; 0x852 <__fp_splitA>
 870:	08 c0       	rjmp	.+16     	; 0x882 <__fp_splitA+0x30>
 872:	16 16       	cp	r1, r22
 874:	17 06       	cpc	r1, r23
 876:	18 06       	cpc	r1, r24
 878:	99 1f       	adc	r25, r25
 87a:	f1 cf       	rjmp	.-30     	; 0x85e <__fp_splitA+0xc>
 87c:	86 95       	lsr	r24
 87e:	71 05       	cpc	r23, r1
 880:	61 05       	cpc	r22, r1
 882:	08 94       	sec
 884:	08 95       	ret

00000886 <__fp_zero>:
 886:	e8 94       	clt

00000888 <__fp_szero>:
 888:	bb 27       	eor	r27, r27
 88a:	66 27       	eor	r22, r22
 88c:	77 27       	eor	r23, r23
 88e:	cb 01       	movw	r24, r22
 890:	97 f9       	bld	r25, 7
 892:	08 95       	ret

00000894 <__mulsf3>:
 894:	0e 94 5d 04 	call	0x8ba	; 0x8ba <__mulsf3x>
 898:	0c 94 10 04 	jmp	0x820	; 0x820 <__fp_round>
 89c:	0e 94 02 04 	call	0x804	; 0x804 <__fp_pscA>
 8a0:	38 f0       	brcs	.+14     	; 0x8b0 <__mulsf3+0x1c>
 8a2:	0e 94 09 04 	call	0x812	; 0x812 <__fp_pscB>
 8a6:	20 f0       	brcs	.+8      	; 0x8b0 <__mulsf3+0x1c>
 8a8:	95 23       	and	r25, r21
 8aa:	11 f0       	breq	.+4      	; 0x8b0 <__mulsf3+0x1c>
 8ac:	0c 94 f9 03 	jmp	0x7f2	; 0x7f2 <__fp_inf>
 8b0:	0c 94 ff 03 	jmp	0x7fe	; 0x7fe <__fp_nan>
 8b4:	11 24       	eor	r1, r1
 8b6:	0c 94 44 04 	jmp	0x888	; 0x888 <__fp_szero>

000008ba <__mulsf3x>:
 8ba:	0e 94 21 04 	call	0x842	; 0x842 <__fp_split3>
 8be:	70 f3       	brcs	.-36     	; 0x89c <__mulsf3+0x8>

000008c0 <__mulsf3_pse>:
 8c0:	95 9f       	mul	r25, r21
 8c2:	c1 f3       	breq	.-16     	; 0x8b4 <__mulsf3+0x20>
 8c4:	95 0f       	add	r25, r21
 8c6:	50 e0       	ldi	r21, 0x00	; 0
 8c8:	55 1f       	adc	r21, r21
 8ca:	62 9f       	mul	r22, r18
 8cc:	f0 01       	movw	r30, r0
 8ce:	72 9f       	mul	r23, r18
 8d0:	bb 27       	eor	r27, r27
 8d2:	f0 0d       	add	r31, r0
 8d4:	b1 1d       	adc	r27, r1
 8d6:	63 9f       	mul	r22, r19
 8d8:	aa 27       	eor	r26, r26
 8da:	f0 0d       	add	r31, r0
 8dc:	b1 1d       	adc	r27, r1
 8de:	aa 1f       	adc	r26, r26
 8e0:	64 9f       	mul	r22, r20
 8e2:	66 27       	eor	r22, r22
 8e4:	b0 0d       	add	r27, r0
 8e6:	a1 1d       	adc	r26, r1
 8e8:	66 1f       	adc	r22, r22
 8ea:	82 9f       	mul	r24, r18
 8ec:	22 27       	eor	r18, r18
 8ee:	b0 0d       	add	r27, r0
 8f0:	a1 1d       	adc	r26, r1
 8f2:	62 1f       	adc	r22, r18
 8f4:	73 9f       	mul	r23, r19
 8f6:	b0 0d       	add	r27, r0
 8f8:	a1 1d       	adc	r26, r1
 8fa:	62 1f       	adc	r22, r18
 8fc:	83 9f       	mul	r24, r19
 8fe:	a0 0d       	add	r26, r0
 900:	61 1d       	adc	r22, r1
 902:	22 1f       	adc	r18, r18
 904:	74 9f       	mul	r23, r20
 906:	33 27       	eor	r19, r19
 908:	a0 0d       	add	r26, r0
 90a:	61 1d       	adc	r22, r1
 90c:	23 1f       	adc	r18, r19
 90e:	84 9f       	mul	r24, r20
 910:	60 0d       	add	r22, r0
 912:	21 1d       	adc	r18, r1
 914:	82 2f       	mov	r24, r18
 916:	76 2f       	mov	r23, r22
 918:	6a 2f       	mov	r22, r26
 91a:	11 24       	eor	r1, r1
 91c:	9f 57       	subi	r25, 0x7F	; 127
 91e:	50 40       	sbci	r21, 0x00	; 0
 920:	9a f0       	brmi	.+38     	; 0x948 <__stack+0x49>
 922:	f1 f0       	breq	.+60     	; 0x960 <__stack+0x61>
 924:	88 23       	and	r24, r24
 926:	4a f0       	brmi	.+18     	; 0x93a <__stack+0x3b>
 928:	ee 0f       	add	r30, r30
 92a:	ff 1f       	adc	r31, r31
 92c:	bb 1f       	adc	r27, r27
 92e:	66 1f       	adc	r22, r22
 930:	77 1f       	adc	r23, r23
 932:	88 1f       	adc	r24, r24
 934:	91 50       	subi	r25, 0x01	; 1
 936:	50 40       	sbci	r21, 0x00	; 0
 938:	a9 f7       	brne	.-22     	; 0x924 <__stack+0x25>
 93a:	9e 3f       	cpi	r25, 0xFE	; 254
 93c:	51 05       	cpc	r21, r1
 93e:	80 f0       	brcs	.+32     	; 0x960 <__stack+0x61>
 940:	0c 94 f9 03 	jmp	0x7f2	; 0x7f2 <__fp_inf>
 944:	0c 94 44 04 	jmp	0x888	; 0x888 <__fp_szero>
 948:	5f 3f       	cpi	r21, 0xFF	; 255
 94a:	e4 f3       	brlt	.-8      	; 0x944 <__stack+0x45>
 94c:	98 3e       	cpi	r25, 0xE8	; 232
 94e:	d4 f3       	brlt	.-12     	; 0x944 <__stack+0x45>
 950:	86 95       	lsr	r24
 952:	77 95       	ror	r23
 954:	67 95       	ror	r22
 956:	b7 95       	ror	r27
 958:	f7 95       	ror	r31
 95a:	e7 95       	ror	r30
 95c:	9f 5f       	subi	r25, 0xFF	; 255
 95e:	c1 f7       	brne	.-16     	; 0x950 <__stack+0x51>
 960:	fe 2b       	or	r31, r30
 962:	88 0f       	add	r24, r24
 964:	91 1d       	adc	r25, r1
 966:	96 95       	lsr	r25
 968:	87 95       	ror	r24
 96a:	97 f9       	bld	r25, 7
 96c:	08 95       	ret

0000096e <sprintf>:
 96e:	ae e0       	ldi	r26, 0x0E	; 14
 970:	b0 e0       	ldi	r27, 0x00	; 0
 972:	ed eb       	ldi	r30, 0xBD	; 189
 974:	f4 e0       	ldi	r31, 0x04	; 4
 976:	0c 94 78 07 	jmp	0xef0	; 0xef0 <__prologue_saves__+0x1c>
 97a:	0d 89       	ldd	r16, Y+21	; 0x15
 97c:	1e 89       	ldd	r17, Y+22	; 0x16
 97e:	86 e0       	ldi	r24, 0x06	; 6
 980:	8c 83       	std	Y+4, r24	; 0x04
 982:	1a 83       	std	Y+2, r17	; 0x02
 984:	09 83       	std	Y+1, r16	; 0x01
 986:	8f ef       	ldi	r24, 0xFF	; 255
 988:	9f e7       	ldi	r25, 0x7F	; 127
 98a:	9e 83       	std	Y+6, r25	; 0x06
 98c:	8d 83       	std	Y+5, r24	; 0x05
 98e:	ae 01       	movw	r20, r28
 990:	47 5e       	subi	r20, 0xE7	; 231
 992:	5f 4f       	sbci	r21, 0xFF	; 255
 994:	6f 89       	ldd	r22, Y+23	; 0x17
 996:	78 8d       	ldd	r23, Y+24	; 0x18
 998:	ce 01       	movw	r24, r28
 99a:	01 96       	adiw	r24, 0x01	; 1
 99c:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <vfprintf>
 9a0:	ef 81       	ldd	r30, Y+7	; 0x07
 9a2:	f8 85       	ldd	r31, Y+8	; 0x08
 9a4:	e0 0f       	add	r30, r16
 9a6:	f1 1f       	adc	r31, r17
 9a8:	10 82       	st	Z, r1
 9aa:	2e 96       	adiw	r28, 0x0e	; 14
 9ac:	e4 e0       	ldi	r30, 0x04	; 4
 9ae:	0c 94 94 07 	jmp	0xf28	; 0xf28 <__epilogue_restores__+0x1c>

000009b2 <vfprintf>:
 9b2:	ab e0       	ldi	r26, 0x0B	; 11
 9b4:	b0 e0       	ldi	r27, 0x00	; 0
 9b6:	ef ed       	ldi	r30, 0xDF	; 223
 9b8:	f4 e0       	ldi	r31, 0x04	; 4
 9ba:	0c 94 6a 07 	jmp	0xed4	; 0xed4 <__prologue_saves__>
 9be:	6c 01       	movw	r12, r24
 9c0:	7b 01       	movw	r14, r22
 9c2:	8a 01       	movw	r16, r20
 9c4:	fc 01       	movw	r30, r24
 9c6:	17 82       	std	Z+7, r1	; 0x07
 9c8:	16 82       	std	Z+6, r1	; 0x06
 9ca:	83 81       	ldd	r24, Z+3	; 0x03
 9cc:	81 ff       	sbrs	r24, 1
 9ce:	cc c1       	rjmp	.+920    	; 0xd68 <vfprintf+0x3b6>
 9d0:	ce 01       	movw	r24, r28
 9d2:	01 96       	adiw	r24, 0x01	; 1
 9d4:	3c 01       	movw	r6, r24
 9d6:	f6 01       	movw	r30, r12
 9d8:	93 81       	ldd	r25, Z+3	; 0x03
 9da:	f7 01       	movw	r30, r14
 9dc:	93 fd       	sbrc	r25, 3
 9de:	85 91       	lpm	r24, Z+
 9e0:	93 ff       	sbrs	r25, 3
 9e2:	81 91       	ld	r24, Z+
 9e4:	7f 01       	movw	r14, r30
 9e6:	88 23       	and	r24, r24
 9e8:	09 f4       	brne	.+2      	; 0x9ec <vfprintf+0x3a>
 9ea:	ba c1       	rjmp	.+884    	; 0xd60 <vfprintf+0x3ae>
 9ec:	85 32       	cpi	r24, 0x25	; 37
 9ee:	39 f4       	brne	.+14     	; 0x9fe <vfprintf+0x4c>
 9f0:	93 fd       	sbrc	r25, 3
 9f2:	85 91       	lpm	r24, Z+
 9f4:	93 ff       	sbrs	r25, 3
 9f6:	81 91       	ld	r24, Z+
 9f8:	7f 01       	movw	r14, r30
 9fa:	85 32       	cpi	r24, 0x25	; 37
 9fc:	29 f4       	brne	.+10     	; 0xa08 <vfprintf+0x56>
 9fe:	b6 01       	movw	r22, r12
 a00:	90 e0       	ldi	r25, 0x00	; 0
 a02:	0e 94 d0 06 	call	0xda0	; 0xda0 <fputc>
 a06:	e7 cf       	rjmp	.-50     	; 0x9d6 <vfprintf+0x24>
 a08:	91 2c       	mov	r9, r1
 a0a:	21 2c       	mov	r2, r1
 a0c:	31 2c       	mov	r3, r1
 a0e:	ff e1       	ldi	r31, 0x1F	; 31
 a10:	f3 15       	cp	r31, r3
 a12:	d8 f0       	brcs	.+54     	; 0xa4a <vfprintf+0x98>
 a14:	8b 32       	cpi	r24, 0x2B	; 43
 a16:	79 f0       	breq	.+30     	; 0xa36 <vfprintf+0x84>
 a18:	38 f4       	brcc	.+14     	; 0xa28 <vfprintf+0x76>
 a1a:	80 32       	cpi	r24, 0x20	; 32
 a1c:	79 f0       	breq	.+30     	; 0xa3c <vfprintf+0x8a>
 a1e:	83 32       	cpi	r24, 0x23	; 35
 a20:	a1 f4       	brne	.+40     	; 0xa4a <vfprintf+0x98>
 a22:	23 2d       	mov	r18, r3
 a24:	20 61       	ori	r18, 0x10	; 16
 a26:	1d c0       	rjmp	.+58     	; 0xa62 <vfprintf+0xb0>
 a28:	8d 32       	cpi	r24, 0x2D	; 45
 a2a:	61 f0       	breq	.+24     	; 0xa44 <vfprintf+0x92>
 a2c:	80 33       	cpi	r24, 0x30	; 48
 a2e:	69 f4       	brne	.+26     	; 0xa4a <vfprintf+0x98>
 a30:	23 2d       	mov	r18, r3
 a32:	21 60       	ori	r18, 0x01	; 1
 a34:	16 c0       	rjmp	.+44     	; 0xa62 <vfprintf+0xb0>
 a36:	83 2d       	mov	r24, r3
 a38:	82 60       	ori	r24, 0x02	; 2
 a3a:	38 2e       	mov	r3, r24
 a3c:	e3 2d       	mov	r30, r3
 a3e:	e4 60       	ori	r30, 0x04	; 4
 a40:	3e 2e       	mov	r3, r30
 a42:	2a c0       	rjmp	.+84     	; 0xa98 <vfprintf+0xe6>
 a44:	f3 2d       	mov	r31, r3
 a46:	f8 60       	ori	r31, 0x08	; 8
 a48:	1d c0       	rjmp	.+58     	; 0xa84 <vfprintf+0xd2>
 a4a:	37 fc       	sbrc	r3, 7
 a4c:	2d c0       	rjmp	.+90     	; 0xaa8 <vfprintf+0xf6>
 a4e:	20 ed       	ldi	r18, 0xD0	; 208
 a50:	28 0f       	add	r18, r24
 a52:	2a 30       	cpi	r18, 0x0A	; 10
 a54:	40 f0       	brcs	.+16     	; 0xa66 <vfprintf+0xb4>
 a56:	8e 32       	cpi	r24, 0x2E	; 46
 a58:	b9 f4       	brne	.+46     	; 0xa88 <vfprintf+0xd6>
 a5a:	36 fc       	sbrc	r3, 6
 a5c:	81 c1       	rjmp	.+770    	; 0xd60 <vfprintf+0x3ae>
 a5e:	23 2d       	mov	r18, r3
 a60:	20 64       	ori	r18, 0x40	; 64
 a62:	32 2e       	mov	r3, r18
 a64:	19 c0       	rjmp	.+50     	; 0xa98 <vfprintf+0xe6>
 a66:	36 fe       	sbrs	r3, 6
 a68:	06 c0       	rjmp	.+12     	; 0xa76 <vfprintf+0xc4>
 a6a:	8a e0       	ldi	r24, 0x0A	; 10
 a6c:	98 9e       	mul	r9, r24
 a6e:	20 0d       	add	r18, r0
 a70:	11 24       	eor	r1, r1
 a72:	92 2e       	mov	r9, r18
 a74:	11 c0       	rjmp	.+34     	; 0xa98 <vfprintf+0xe6>
 a76:	ea e0       	ldi	r30, 0x0A	; 10
 a78:	2e 9e       	mul	r2, r30
 a7a:	20 0d       	add	r18, r0
 a7c:	11 24       	eor	r1, r1
 a7e:	22 2e       	mov	r2, r18
 a80:	f3 2d       	mov	r31, r3
 a82:	f0 62       	ori	r31, 0x20	; 32
 a84:	3f 2e       	mov	r3, r31
 a86:	08 c0       	rjmp	.+16     	; 0xa98 <vfprintf+0xe6>
 a88:	8c 36       	cpi	r24, 0x6C	; 108
 a8a:	21 f4       	brne	.+8      	; 0xa94 <vfprintf+0xe2>
 a8c:	83 2d       	mov	r24, r3
 a8e:	80 68       	ori	r24, 0x80	; 128
 a90:	38 2e       	mov	r3, r24
 a92:	02 c0       	rjmp	.+4      	; 0xa98 <vfprintf+0xe6>
 a94:	88 36       	cpi	r24, 0x68	; 104
 a96:	41 f4       	brne	.+16     	; 0xaa8 <vfprintf+0xf6>
 a98:	f7 01       	movw	r30, r14
 a9a:	93 fd       	sbrc	r25, 3
 a9c:	85 91       	lpm	r24, Z+
 a9e:	93 ff       	sbrs	r25, 3
 aa0:	81 91       	ld	r24, Z+
 aa2:	7f 01       	movw	r14, r30
 aa4:	81 11       	cpse	r24, r1
 aa6:	b3 cf       	rjmp	.-154    	; 0xa0e <vfprintf+0x5c>
 aa8:	98 2f       	mov	r25, r24
 aaa:	9f 7d       	andi	r25, 0xDF	; 223
 aac:	95 54       	subi	r25, 0x45	; 69
 aae:	93 30       	cpi	r25, 0x03	; 3
 ab0:	28 f4       	brcc	.+10     	; 0xabc <vfprintf+0x10a>
 ab2:	0c 5f       	subi	r16, 0xFC	; 252
 ab4:	1f 4f       	sbci	r17, 0xFF	; 255
 ab6:	9f e3       	ldi	r25, 0x3F	; 63
 ab8:	99 83       	std	Y+1, r25	; 0x01
 aba:	0d c0       	rjmp	.+26     	; 0xad6 <vfprintf+0x124>
 abc:	83 36       	cpi	r24, 0x63	; 99
 abe:	31 f0       	breq	.+12     	; 0xacc <vfprintf+0x11a>
 ac0:	83 37       	cpi	r24, 0x73	; 115
 ac2:	71 f0       	breq	.+28     	; 0xae0 <vfprintf+0x12e>
 ac4:	83 35       	cpi	r24, 0x53	; 83
 ac6:	09 f0       	breq	.+2      	; 0xaca <vfprintf+0x118>
 ac8:	59 c0       	rjmp	.+178    	; 0xb7c <vfprintf+0x1ca>
 aca:	21 c0       	rjmp	.+66     	; 0xb0e <vfprintf+0x15c>
 acc:	f8 01       	movw	r30, r16
 ace:	80 81       	ld	r24, Z
 ad0:	89 83       	std	Y+1, r24	; 0x01
 ad2:	0e 5f       	subi	r16, 0xFE	; 254
 ad4:	1f 4f       	sbci	r17, 0xFF	; 255
 ad6:	88 24       	eor	r8, r8
 ad8:	83 94       	inc	r8
 ada:	91 2c       	mov	r9, r1
 adc:	53 01       	movw	r10, r6
 ade:	13 c0       	rjmp	.+38     	; 0xb06 <vfprintf+0x154>
 ae0:	28 01       	movw	r4, r16
 ae2:	f2 e0       	ldi	r31, 0x02	; 2
 ae4:	4f 0e       	add	r4, r31
 ae6:	51 1c       	adc	r5, r1
 ae8:	f8 01       	movw	r30, r16
 aea:	a0 80       	ld	r10, Z
 aec:	b1 80       	ldd	r11, Z+1	; 0x01
 aee:	36 fe       	sbrs	r3, 6
 af0:	03 c0       	rjmp	.+6      	; 0xaf8 <vfprintf+0x146>
 af2:	69 2d       	mov	r22, r9
 af4:	70 e0       	ldi	r23, 0x00	; 0
 af6:	02 c0       	rjmp	.+4      	; 0xafc <vfprintf+0x14a>
 af8:	6f ef       	ldi	r22, 0xFF	; 255
 afa:	7f ef       	ldi	r23, 0xFF	; 255
 afc:	c5 01       	movw	r24, r10
 afe:	0e 94 c5 06 	call	0xd8a	; 0xd8a <strnlen>
 b02:	4c 01       	movw	r8, r24
 b04:	82 01       	movw	r16, r4
 b06:	f3 2d       	mov	r31, r3
 b08:	ff 77       	andi	r31, 0x7F	; 127
 b0a:	3f 2e       	mov	r3, r31
 b0c:	16 c0       	rjmp	.+44     	; 0xb3a <vfprintf+0x188>
 b0e:	28 01       	movw	r4, r16
 b10:	22 e0       	ldi	r18, 0x02	; 2
 b12:	42 0e       	add	r4, r18
 b14:	51 1c       	adc	r5, r1
 b16:	f8 01       	movw	r30, r16
 b18:	a0 80       	ld	r10, Z
 b1a:	b1 80       	ldd	r11, Z+1	; 0x01
 b1c:	36 fe       	sbrs	r3, 6
 b1e:	03 c0       	rjmp	.+6      	; 0xb26 <vfprintf+0x174>
 b20:	69 2d       	mov	r22, r9
 b22:	70 e0       	ldi	r23, 0x00	; 0
 b24:	02 c0       	rjmp	.+4      	; 0xb2a <vfprintf+0x178>
 b26:	6f ef       	ldi	r22, 0xFF	; 255
 b28:	7f ef       	ldi	r23, 0xFF	; 255
 b2a:	c5 01       	movw	r24, r10
 b2c:	0e 94 ba 06 	call	0xd74	; 0xd74 <strnlen_P>
 b30:	4c 01       	movw	r8, r24
 b32:	f3 2d       	mov	r31, r3
 b34:	f0 68       	ori	r31, 0x80	; 128
 b36:	3f 2e       	mov	r3, r31
 b38:	82 01       	movw	r16, r4
 b3a:	33 fc       	sbrc	r3, 3
 b3c:	1b c0       	rjmp	.+54     	; 0xb74 <vfprintf+0x1c2>
 b3e:	82 2d       	mov	r24, r2
 b40:	90 e0       	ldi	r25, 0x00	; 0
 b42:	88 16       	cp	r8, r24
 b44:	99 06       	cpc	r9, r25
 b46:	b0 f4       	brcc	.+44     	; 0xb74 <vfprintf+0x1c2>
 b48:	b6 01       	movw	r22, r12
 b4a:	80 e2       	ldi	r24, 0x20	; 32
 b4c:	90 e0       	ldi	r25, 0x00	; 0
 b4e:	0e 94 d0 06 	call	0xda0	; 0xda0 <fputc>
 b52:	2a 94       	dec	r2
 b54:	f4 cf       	rjmp	.-24     	; 0xb3e <vfprintf+0x18c>
 b56:	f5 01       	movw	r30, r10
 b58:	37 fc       	sbrc	r3, 7
 b5a:	85 91       	lpm	r24, Z+
 b5c:	37 fe       	sbrs	r3, 7
 b5e:	81 91       	ld	r24, Z+
 b60:	5f 01       	movw	r10, r30
 b62:	b6 01       	movw	r22, r12
 b64:	90 e0       	ldi	r25, 0x00	; 0
 b66:	0e 94 d0 06 	call	0xda0	; 0xda0 <fputc>
 b6a:	21 10       	cpse	r2, r1
 b6c:	2a 94       	dec	r2
 b6e:	21 e0       	ldi	r18, 0x01	; 1
 b70:	82 1a       	sub	r8, r18
 b72:	91 08       	sbc	r9, r1
 b74:	81 14       	cp	r8, r1
 b76:	91 04       	cpc	r9, r1
 b78:	71 f7       	brne	.-36     	; 0xb56 <vfprintf+0x1a4>
 b7a:	e8 c0       	rjmp	.+464    	; 0xd4c <vfprintf+0x39a>
 b7c:	84 36       	cpi	r24, 0x64	; 100
 b7e:	11 f0       	breq	.+4      	; 0xb84 <vfprintf+0x1d2>
 b80:	89 36       	cpi	r24, 0x69	; 105
 b82:	41 f5       	brne	.+80     	; 0xbd4 <vfprintf+0x222>
 b84:	f8 01       	movw	r30, r16
 b86:	37 fe       	sbrs	r3, 7
 b88:	07 c0       	rjmp	.+14     	; 0xb98 <vfprintf+0x1e6>
 b8a:	60 81       	ld	r22, Z
 b8c:	71 81       	ldd	r23, Z+1	; 0x01
 b8e:	82 81       	ldd	r24, Z+2	; 0x02
 b90:	93 81       	ldd	r25, Z+3	; 0x03
 b92:	0c 5f       	subi	r16, 0xFC	; 252
 b94:	1f 4f       	sbci	r17, 0xFF	; 255
 b96:	08 c0       	rjmp	.+16     	; 0xba8 <vfprintf+0x1f6>
 b98:	60 81       	ld	r22, Z
 b9a:	71 81       	ldd	r23, Z+1	; 0x01
 b9c:	07 2e       	mov	r0, r23
 b9e:	00 0c       	add	r0, r0
 ba0:	88 0b       	sbc	r24, r24
 ba2:	99 0b       	sbc	r25, r25
 ba4:	0e 5f       	subi	r16, 0xFE	; 254
 ba6:	1f 4f       	sbci	r17, 0xFF	; 255
 ba8:	f3 2d       	mov	r31, r3
 baa:	ff 76       	andi	r31, 0x6F	; 111
 bac:	3f 2e       	mov	r3, r31
 bae:	97 ff       	sbrs	r25, 7
 bb0:	09 c0       	rjmp	.+18     	; 0xbc4 <vfprintf+0x212>
 bb2:	90 95       	com	r25
 bb4:	80 95       	com	r24
 bb6:	70 95       	com	r23
 bb8:	61 95       	neg	r22
 bba:	7f 4f       	sbci	r23, 0xFF	; 255
 bbc:	8f 4f       	sbci	r24, 0xFF	; 255
 bbe:	9f 4f       	sbci	r25, 0xFF	; 255
 bc0:	f0 68       	ori	r31, 0x80	; 128
 bc2:	3f 2e       	mov	r3, r31
 bc4:	2a e0       	ldi	r18, 0x0A	; 10
 bc6:	30 e0       	ldi	r19, 0x00	; 0
 bc8:	a3 01       	movw	r20, r6
 bca:	0e 94 0c 07 	call	0xe18	; 0xe18 <__ultoa_invert>
 bce:	88 2e       	mov	r8, r24
 bd0:	86 18       	sub	r8, r6
 bd2:	45 c0       	rjmp	.+138    	; 0xc5e <vfprintf+0x2ac>
 bd4:	85 37       	cpi	r24, 0x75	; 117
 bd6:	31 f4       	brne	.+12     	; 0xbe4 <vfprintf+0x232>
 bd8:	23 2d       	mov	r18, r3
 bda:	2f 7e       	andi	r18, 0xEF	; 239
 bdc:	b2 2e       	mov	r11, r18
 bde:	2a e0       	ldi	r18, 0x0A	; 10
 be0:	30 e0       	ldi	r19, 0x00	; 0
 be2:	25 c0       	rjmp	.+74     	; 0xc2e <vfprintf+0x27c>
 be4:	93 2d       	mov	r25, r3
 be6:	99 7f       	andi	r25, 0xF9	; 249
 be8:	b9 2e       	mov	r11, r25
 bea:	8f 36       	cpi	r24, 0x6F	; 111
 bec:	c1 f0       	breq	.+48     	; 0xc1e <vfprintf+0x26c>
 bee:	18 f4       	brcc	.+6      	; 0xbf6 <vfprintf+0x244>
 bf0:	88 35       	cpi	r24, 0x58	; 88
 bf2:	79 f0       	breq	.+30     	; 0xc12 <vfprintf+0x260>
 bf4:	b5 c0       	rjmp	.+362    	; 0xd60 <vfprintf+0x3ae>
 bf6:	80 37       	cpi	r24, 0x70	; 112
 bf8:	19 f0       	breq	.+6      	; 0xc00 <vfprintf+0x24e>
 bfa:	88 37       	cpi	r24, 0x78	; 120
 bfc:	21 f0       	breq	.+8      	; 0xc06 <vfprintf+0x254>
 bfe:	b0 c0       	rjmp	.+352    	; 0xd60 <vfprintf+0x3ae>
 c00:	e9 2f       	mov	r30, r25
 c02:	e0 61       	ori	r30, 0x10	; 16
 c04:	be 2e       	mov	r11, r30
 c06:	b4 fe       	sbrs	r11, 4
 c08:	0d c0       	rjmp	.+26     	; 0xc24 <vfprintf+0x272>
 c0a:	fb 2d       	mov	r31, r11
 c0c:	f4 60       	ori	r31, 0x04	; 4
 c0e:	bf 2e       	mov	r11, r31
 c10:	09 c0       	rjmp	.+18     	; 0xc24 <vfprintf+0x272>
 c12:	34 fe       	sbrs	r3, 4
 c14:	0a c0       	rjmp	.+20     	; 0xc2a <vfprintf+0x278>
 c16:	29 2f       	mov	r18, r25
 c18:	26 60       	ori	r18, 0x06	; 6
 c1a:	b2 2e       	mov	r11, r18
 c1c:	06 c0       	rjmp	.+12     	; 0xc2a <vfprintf+0x278>
 c1e:	28 e0       	ldi	r18, 0x08	; 8
 c20:	30 e0       	ldi	r19, 0x00	; 0
 c22:	05 c0       	rjmp	.+10     	; 0xc2e <vfprintf+0x27c>
 c24:	20 e1       	ldi	r18, 0x10	; 16
 c26:	30 e0       	ldi	r19, 0x00	; 0
 c28:	02 c0       	rjmp	.+4      	; 0xc2e <vfprintf+0x27c>
 c2a:	20 e1       	ldi	r18, 0x10	; 16
 c2c:	32 e0       	ldi	r19, 0x02	; 2
 c2e:	f8 01       	movw	r30, r16
 c30:	b7 fe       	sbrs	r11, 7
 c32:	07 c0       	rjmp	.+14     	; 0xc42 <vfprintf+0x290>
 c34:	60 81       	ld	r22, Z
 c36:	71 81       	ldd	r23, Z+1	; 0x01
 c38:	82 81       	ldd	r24, Z+2	; 0x02
 c3a:	93 81       	ldd	r25, Z+3	; 0x03
 c3c:	0c 5f       	subi	r16, 0xFC	; 252
 c3e:	1f 4f       	sbci	r17, 0xFF	; 255
 c40:	06 c0       	rjmp	.+12     	; 0xc4e <vfprintf+0x29c>
 c42:	60 81       	ld	r22, Z
 c44:	71 81       	ldd	r23, Z+1	; 0x01
 c46:	80 e0       	ldi	r24, 0x00	; 0
 c48:	90 e0       	ldi	r25, 0x00	; 0
 c4a:	0e 5f       	subi	r16, 0xFE	; 254
 c4c:	1f 4f       	sbci	r17, 0xFF	; 255
 c4e:	a3 01       	movw	r20, r6
 c50:	0e 94 0c 07 	call	0xe18	; 0xe18 <__ultoa_invert>
 c54:	88 2e       	mov	r8, r24
 c56:	86 18       	sub	r8, r6
 c58:	fb 2d       	mov	r31, r11
 c5a:	ff 77       	andi	r31, 0x7F	; 127
 c5c:	3f 2e       	mov	r3, r31
 c5e:	36 fe       	sbrs	r3, 6
 c60:	0d c0       	rjmp	.+26     	; 0xc7c <vfprintf+0x2ca>
 c62:	23 2d       	mov	r18, r3
 c64:	2e 7f       	andi	r18, 0xFE	; 254
 c66:	a2 2e       	mov	r10, r18
 c68:	89 14       	cp	r8, r9
 c6a:	58 f4       	brcc	.+22     	; 0xc82 <vfprintf+0x2d0>
 c6c:	34 fe       	sbrs	r3, 4
 c6e:	0b c0       	rjmp	.+22     	; 0xc86 <vfprintf+0x2d4>
 c70:	32 fc       	sbrc	r3, 2
 c72:	09 c0       	rjmp	.+18     	; 0xc86 <vfprintf+0x2d4>
 c74:	83 2d       	mov	r24, r3
 c76:	8e 7e       	andi	r24, 0xEE	; 238
 c78:	a8 2e       	mov	r10, r24
 c7a:	05 c0       	rjmp	.+10     	; 0xc86 <vfprintf+0x2d4>
 c7c:	b8 2c       	mov	r11, r8
 c7e:	a3 2c       	mov	r10, r3
 c80:	03 c0       	rjmp	.+6      	; 0xc88 <vfprintf+0x2d6>
 c82:	b8 2c       	mov	r11, r8
 c84:	01 c0       	rjmp	.+2      	; 0xc88 <vfprintf+0x2d6>
 c86:	b9 2c       	mov	r11, r9
 c88:	a4 fe       	sbrs	r10, 4
 c8a:	0f c0       	rjmp	.+30     	; 0xcaa <vfprintf+0x2f8>
 c8c:	fe 01       	movw	r30, r28
 c8e:	e8 0d       	add	r30, r8
 c90:	f1 1d       	adc	r31, r1
 c92:	80 81       	ld	r24, Z
 c94:	80 33       	cpi	r24, 0x30	; 48
 c96:	21 f4       	brne	.+8      	; 0xca0 <vfprintf+0x2ee>
 c98:	9a 2d       	mov	r25, r10
 c9a:	99 7e       	andi	r25, 0xE9	; 233
 c9c:	a9 2e       	mov	r10, r25
 c9e:	09 c0       	rjmp	.+18     	; 0xcb2 <vfprintf+0x300>
 ca0:	a2 fe       	sbrs	r10, 2
 ca2:	06 c0       	rjmp	.+12     	; 0xcb0 <vfprintf+0x2fe>
 ca4:	b3 94       	inc	r11
 ca6:	b3 94       	inc	r11
 ca8:	04 c0       	rjmp	.+8      	; 0xcb2 <vfprintf+0x300>
 caa:	8a 2d       	mov	r24, r10
 cac:	86 78       	andi	r24, 0x86	; 134
 cae:	09 f0       	breq	.+2      	; 0xcb2 <vfprintf+0x300>
 cb0:	b3 94       	inc	r11
 cb2:	a3 fc       	sbrc	r10, 3
 cb4:	11 c0       	rjmp	.+34     	; 0xcd8 <vfprintf+0x326>
 cb6:	a0 fe       	sbrs	r10, 0
 cb8:	06 c0       	rjmp	.+12     	; 0xcc6 <vfprintf+0x314>
 cba:	b2 14       	cp	r11, r2
 cbc:	88 f4       	brcc	.+34     	; 0xce0 <vfprintf+0x32e>
 cbe:	28 0c       	add	r2, r8
 cc0:	92 2c       	mov	r9, r2
 cc2:	9b 18       	sub	r9, r11
 cc4:	0e c0       	rjmp	.+28     	; 0xce2 <vfprintf+0x330>
 cc6:	b2 14       	cp	r11, r2
 cc8:	60 f4       	brcc	.+24     	; 0xce2 <vfprintf+0x330>
 cca:	b6 01       	movw	r22, r12
 ccc:	80 e2       	ldi	r24, 0x20	; 32
 cce:	90 e0       	ldi	r25, 0x00	; 0
 cd0:	0e 94 d0 06 	call	0xda0	; 0xda0 <fputc>
 cd4:	b3 94       	inc	r11
 cd6:	f7 cf       	rjmp	.-18     	; 0xcc6 <vfprintf+0x314>
 cd8:	b2 14       	cp	r11, r2
 cda:	18 f4       	brcc	.+6      	; 0xce2 <vfprintf+0x330>
 cdc:	2b 18       	sub	r2, r11
 cde:	02 c0       	rjmp	.+4      	; 0xce4 <vfprintf+0x332>
 ce0:	98 2c       	mov	r9, r8
 ce2:	21 2c       	mov	r2, r1
 ce4:	a4 fe       	sbrs	r10, 4
 ce6:	10 c0       	rjmp	.+32     	; 0xd08 <vfprintf+0x356>
 ce8:	b6 01       	movw	r22, r12
 cea:	80 e3       	ldi	r24, 0x30	; 48
 cec:	90 e0       	ldi	r25, 0x00	; 0
 cee:	0e 94 d0 06 	call	0xda0	; 0xda0 <fputc>
 cf2:	a2 fe       	sbrs	r10, 2
 cf4:	17 c0       	rjmp	.+46     	; 0xd24 <vfprintf+0x372>
 cf6:	a1 fc       	sbrc	r10, 1
 cf8:	03 c0       	rjmp	.+6      	; 0xd00 <vfprintf+0x34e>
 cfa:	88 e7       	ldi	r24, 0x78	; 120
 cfc:	90 e0       	ldi	r25, 0x00	; 0
 cfe:	02 c0       	rjmp	.+4      	; 0xd04 <vfprintf+0x352>
 d00:	88 e5       	ldi	r24, 0x58	; 88
 d02:	90 e0       	ldi	r25, 0x00	; 0
 d04:	b6 01       	movw	r22, r12
 d06:	0c c0       	rjmp	.+24     	; 0xd20 <vfprintf+0x36e>
 d08:	8a 2d       	mov	r24, r10
 d0a:	86 78       	andi	r24, 0x86	; 134
 d0c:	59 f0       	breq	.+22     	; 0xd24 <vfprintf+0x372>
 d0e:	a1 fe       	sbrs	r10, 1
 d10:	02 c0       	rjmp	.+4      	; 0xd16 <vfprintf+0x364>
 d12:	8b e2       	ldi	r24, 0x2B	; 43
 d14:	01 c0       	rjmp	.+2      	; 0xd18 <vfprintf+0x366>
 d16:	80 e2       	ldi	r24, 0x20	; 32
 d18:	a7 fc       	sbrc	r10, 7
 d1a:	8d e2       	ldi	r24, 0x2D	; 45
 d1c:	b6 01       	movw	r22, r12
 d1e:	90 e0       	ldi	r25, 0x00	; 0
 d20:	0e 94 d0 06 	call	0xda0	; 0xda0 <fputc>
 d24:	89 14       	cp	r8, r9
 d26:	38 f4       	brcc	.+14     	; 0xd36 <vfprintf+0x384>
 d28:	b6 01       	movw	r22, r12
 d2a:	80 e3       	ldi	r24, 0x30	; 48
 d2c:	90 e0       	ldi	r25, 0x00	; 0
 d2e:	0e 94 d0 06 	call	0xda0	; 0xda0 <fputc>
 d32:	9a 94       	dec	r9
 d34:	f7 cf       	rjmp	.-18     	; 0xd24 <vfprintf+0x372>
 d36:	8a 94       	dec	r8
 d38:	f3 01       	movw	r30, r6
 d3a:	e8 0d       	add	r30, r8
 d3c:	f1 1d       	adc	r31, r1
 d3e:	80 81       	ld	r24, Z
 d40:	b6 01       	movw	r22, r12
 d42:	90 e0       	ldi	r25, 0x00	; 0
 d44:	0e 94 d0 06 	call	0xda0	; 0xda0 <fputc>
 d48:	81 10       	cpse	r8, r1
 d4a:	f5 cf       	rjmp	.-22     	; 0xd36 <vfprintf+0x384>
 d4c:	22 20       	and	r2, r2
 d4e:	09 f4       	brne	.+2      	; 0xd52 <vfprintf+0x3a0>
 d50:	42 ce       	rjmp	.-892    	; 0x9d6 <vfprintf+0x24>
 d52:	b6 01       	movw	r22, r12
 d54:	80 e2       	ldi	r24, 0x20	; 32
 d56:	90 e0       	ldi	r25, 0x00	; 0
 d58:	0e 94 d0 06 	call	0xda0	; 0xda0 <fputc>
 d5c:	2a 94       	dec	r2
 d5e:	f6 cf       	rjmp	.-20     	; 0xd4c <vfprintf+0x39a>
 d60:	f6 01       	movw	r30, r12
 d62:	86 81       	ldd	r24, Z+6	; 0x06
 d64:	97 81       	ldd	r25, Z+7	; 0x07
 d66:	02 c0       	rjmp	.+4      	; 0xd6c <vfprintf+0x3ba>
 d68:	8f ef       	ldi	r24, 0xFF	; 255
 d6a:	9f ef       	ldi	r25, 0xFF	; 255
 d6c:	2b 96       	adiw	r28, 0x0b	; 11
 d6e:	e2 e1       	ldi	r30, 0x12	; 18
 d70:	0c 94 86 07 	jmp	0xf0c	; 0xf0c <__epilogue_restores__>

00000d74 <strnlen_P>:
 d74:	fc 01       	movw	r30, r24
 d76:	05 90       	lpm	r0, Z+
 d78:	61 50       	subi	r22, 0x01	; 1
 d7a:	70 40       	sbci	r23, 0x00	; 0
 d7c:	01 10       	cpse	r0, r1
 d7e:	d8 f7       	brcc	.-10     	; 0xd76 <strnlen_P+0x2>
 d80:	80 95       	com	r24
 d82:	90 95       	com	r25
 d84:	8e 0f       	add	r24, r30
 d86:	9f 1f       	adc	r25, r31
 d88:	08 95       	ret

00000d8a <strnlen>:
 d8a:	fc 01       	movw	r30, r24
 d8c:	61 50       	subi	r22, 0x01	; 1
 d8e:	70 40       	sbci	r23, 0x00	; 0
 d90:	01 90       	ld	r0, Z+
 d92:	01 10       	cpse	r0, r1
 d94:	d8 f7       	brcc	.-10     	; 0xd8c <strnlen+0x2>
 d96:	80 95       	com	r24
 d98:	90 95       	com	r25
 d9a:	8e 0f       	add	r24, r30
 d9c:	9f 1f       	adc	r25, r31
 d9e:	08 95       	ret

00000da0 <fputc>:
 da0:	0f 93       	push	r16
 da2:	1f 93       	push	r17
 da4:	cf 93       	push	r28
 da6:	df 93       	push	r29
 da8:	fb 01       	movw	r30, r22
 daa:	23 81       	ldd	r18, Z+3	; 0x03
 dac:	21 fd       	sbrc	r18, 1
 dae:	03 c0       	rjmp	.+6      	; 0xdb6 <fputc+0x16>
 db0:	8f ef       	ldi	r24, 0xFF	; 255
 db2:	9f ef       	ldi	r25, 0xFF	; 255
 db4:	2c c0       	rjmp	.+88     	; 0xe0e <fputc+0x6e>
 db6:	22 ff       	sbrs	r18, 2
 db8:	16 c0       	rjmp	.+44     	; 0xde6 <fputc+0x46>
 dba:	46 81       	ldd	r20, Z+6	; 0x06
 dbc:	57 81       	ldd	r21, Z+7	; 0x07
 dbe:	24 81       	ldd	r18, Z+4	; 0x04
 dc0:	35 81       	ldd	r19, Z+5	; 0x05
 dc2:	42 17       	cp	r20, r18
 dc4:	53 07       	cpc	r21, r19
 dc6:	44 f4       	brge	.+16     	; 0xdd8 <fputc+0x38>
 dc8:	a0 81       	ld	r26, Z
 dca:	b1 81       	ldd	r27, Z+1	; 0x01
 dcc:	9d 01       	movw	r18, r26
 dce:	2f 5f       	subi	r18, 0xFF	; 255
 dd0:	3f 4f       	sbci	r19, 0xFF	; 255
 dd2:	31 83       	std	Z+1, r19	; 0x01
 dd4:	20 83       	st	Z, r18
 dd6:	8c 93       	st	X, r24
 dd8:	26 81       	ldd	r18, Z+6	; 0x06
 dda:	37 81       	ldd	r19, Z+7	; 0x07
 ddc:	2f 5f       	subi	r18, 0xFF	; 255
 dde:	3f 4f       	sbci	r19, 0xFF	; 255
 de0:	37 83       	std	Z+7, r19	; 0x07
 de2:	26 83       	std	Z+6, r18	; 0x06
 de4:	14 c0       	rjmp	.+40     	; 0xe0e <fputc+0x6e>
 de6:	8b 01       	movw	r16, r22
 de8:	ec 01       	movw	r28, r24
 dea:	fb 01       	movw	r30, r22
 dec:	00 84       	ldd	r0, Z+8	; 0x08
 dee:	f1 85       	ldd	r31, Z+9	; 0x09
 df0:	e0 2d       	mov	r30, r0
 df2:	09 95       	icall
 df4:	89 2b       	or	r24, r25
 df6:	e1 f6       	brne	.-72     	; 0xdb0 <fputc+0x10>
 df8:	d8 01       	movw	r26, r16
 dfa:	16 96       	adiw	r26, 0x06	; 6
 dfc:	8d 91       	ld	r24, X+
 dfe:	9c 91       	ld	r25, X
 e00:	17 97       	sbiw	r26, 0x07	; 7
 e02:	01 96       	adiw	r24, 0x01	; 1
 e04:	17 96       	adiw	r26, 0x07	; 7
 e06:	9c 93       	st	X, r25
 e08:	8e 93       	st	-X, r24
 e0a:	16 97       	sbiw	r26, 0x06	; 6
 e0c:	ce 01       	movw	r24, r28
 e0e:	df 91       	pop	r29
 e10:	cf 91       	pop	r28
 e12:	1f 91       	pop	r17
 e14:	0f 91       	pop	r16
 e16:	08 95       	ret

00000e18 <__ultoa_invert>:
 e18:	fa 01       	movw	r30, r20
 e1a:	aa 27       	eor	r26, r26
 e1c:	28 30       	cpi	r18, 0x08	; 8
 e1e:	51 f1       	breq	.+84     	; 0xe74 <__ultoa_invert+0x5c>
 e20:	20 31       	cpi	r18, 0x10	; 16
 e22:	81 f1       	breq	.+96     	; 0xe84 <__ultoa_invert+0x6c>
 e24:	e8 94       	clt
 e26:	6f 93       	push	r22
 e28:	6e 7f       	andi	r22, 0xFE	; 254
 e2a:	6e 5f       	subi	r22, 0xFE	; 254
 e2c:	7f 4f       	sbci	r23, 0xFF	; 255
 e2e:	8f 4f       	sbci	r24, 0xFF	; 255
 e30:	9f 4f       	sbci	r25, 0xFF	; 255
 e32:	af 4f       	sbci	r26, 0xFF	; 255
 e34:	b1 e0       	ldi	r27, 0x01	; 1
 e36:	3e d0       	rcall	.+124    	; 0xeb4 <__ultoa_invert+0x9c>
 e38:	b4 e0       	ldi	r27, 0x04	; 4
 e3a:	3c d0       	rcall	.+120    	; 0xeb4 <__ultoa_invert+0x9c>
 e3c:	67 0f       	add	r22, r23
 e3e:	78 1f       	adc	r23, r24
 e40:	89 1f       	adc	r24, r25
 e42:	9a 1f       	adc	r25, r26
 e44:	a1 1d       	adc	r26, r1
 e46:	68 0f       	add	r22, r24
 e48:	79 1f       	adc	r23, r25
 e4a:	8a 1f       	adc	r24, r26
 e4c:	91 1d       	adc	r25, r1
 e4e:	a1 1d       	adc	r26, r1
 e50:	6a 0f       	add	r22, r26
 e52:	71 1d       	adc	r23, r1
 e54:	81 1d       	adc	r24, r1
 e56:	91 1d       	adc	r25, r1
 e58:	a1 1d       	adc	r26, r1
 e5a:	20 d0       	rcall	.+64     	; 0xe9c <__ultoa_invert+0x84>
 e5c:	09 f4       	brne	.+2      	; 0xe60 <__ultoa_invert+0x48>
 e5e:	68 94       	set
 e60:	3f 91       	pop	r19
 e62:	2a e0       	ldi	r18, 0x0A	; 10
 e64:	26 9f       	mul	r18, r22
 e66:	11 24       	eor	r1, r1
 e68:	30 19       	sub	r19, r0
 e6a:	30 5d       	subi	r19, 0xD0	; 208
 e6c:	31 93       	st	Z+, r19
 e6e:	de f6       	brtc	.-74     	; 0xe26 <__ultoa_invert+0xe>
 e70:	cf 01       	movw	r24, r30
 e72:	08 95       	ret
 e74:	46 2f       	mov	r20, r22
 e76:	47 70       	andi	r20, 0x07	; 7
 e78:	40 5d       	subi	r20, 0xD0	; 208
 e7a:	41 93       	st	Z+, r20
 e7c:	b3 e0       	ldi	r27, 0x03	; 3
 e7e:	0f d0       	rcall	.+30     	; 0xe9e <__ultoa_invert+0x86>
 e80:	c9 f7       	brne	.-14     	; 0xe74 <__ultoa_invert+0x5c>
 e82:	f6 cf       	rjmp	.-20     	; 0xe70 <__ultoa_invert+0x58>
 e84:	46 2f       	mov	r20, r22
 e86:	4f 70       	andi	r20, 0x0F	; 15
 e88:	40 5d       	subi	r20, 0xD0	; 208
 e8a:	4a 33       	cpi	r20, 0x3A	; 58
 e8c:	18 f0       	brcs	.+6      	; 0xe94 <__ultoa_invert+0x7c>
 e8e:	49 5d       	subi	r20, 0xD9	; 217
 e90:	31 fd       	sbrc	r19, 1
 e92:	40 52       	subi	r20, 0x20	; 32
 e94:	41 93       	st	Z+, r20
 e96:	02 d0       	rcall	.+4      	; 0xe9c <__ultoa_invert+0x84>
 e98:	a9 f7       	brne	.-22     	; 0xe84 <__ultoa_invert+0x6c>
 e9a:	ea cf       	rjmp	.-44     	; 0xe70 <__ultoa_invert+0x58>
 e9c:	b4 e0       	ldi	r27, 0x04	; 4
 e9e:	a6 95       	lsr	r26
 ea0:	97 95       	ror	r25
 ea2:	87 95       	ror	r24
 ea4:	77 95       	ror	r23
 ea6:	67 95       	ror	r22
 ea8:	ba 95       	dec	r27
 eaa:	c9 f7       	brne	.-14     	; 0xe9e <__ultoa_invert+0x86>
 eac:	00 97       	sbiw	r24, 0x00	; 0
 eae:	61 05       	cpc	r22, r1
 eb0:	71 05       	cpc	r23, r1
 eb2:	08 95       	ret
 eb4:	9b 01       	movw	r18, r22
 eb6:	ac 01       	movw	r20, r24
 eb8:	0a 2e       	mov	r0, r26
 eba:	06 94       	lsr	r0
 ebc:	57 95       	ror	r21
 ebe:	47 95       	ror	r20
 ec0:	37 95       	ror	r19
 ec2:	27 95       	ror	r18
 ec4:	ba 95       	dec	r27
 ec6:	c9 f7       	brne	.-14     	; 0xeba <__ultoa_invert+0xa2>
 ec8:	62 0f       	add	r22, r18
 eca:	73 1f       	adc	r23, r19
 ecc:	84 1f       	adc	r24, r20
 ece:	95 1f       	adc	r25, r21
 ed0:	a0 1d       	adc	r26, r0
 ed2:	08 95       	ret

00000ed4 <__prologue_saves__>:
 ed4:	2f 92       	push	r2
 ed6:	3f 92       	push	r3
 ed8:	4f 92       	push	r4
 eda:	5f 92       	push	r5
 edc:	6f 92       	push	r6
 ede:	7f 92       	push	r7
 ee0:	8f 92       	push	r8
 ee2:	9f 92       	push	r9
 ee4:	af 92       	push	r10
 ee6:	bf 92       	push	r11
 ee8:	cf 92       	push	r12
 eea:	df 92       	push	r13
 eec:	ef 92       	push	r14
 eee:	ff 92       	push	r15
 ef0:	0f 93       	push	r16
 ef2:	1f 93       	push	r17
 ef4:	cf 93       	push	r28
 ef6:	df 93       	push	r29
 ef8:	cd b7       	in	r28, 0x3d	; 61
 efa:	de b7       	in	r29, 0x3e	; 62
 efc:	ca 1b       	sub	r28, r26
 efe:	db 0b       	sbc	r29, r27
 f00:	0f b6       	in	r0, 0x3f	; 63
 f02:	f8 94       	cli
 f04:	de bf       	out	0x3e, r29	; 62
 f06:	0f be       	out	0x3f, r0	; 63
 f08:	cd bf       	out	0x3d, r28	; 61
 f0a:	09 94       	ijmp

00000f0c <__epilogue_restores__>:
 f0c:	2a 88       	ldd	r2, Y+18	; 0x12
 f0e:	39 88       	ldd	r3, Y+17	; 0x11
 f10:	48 88       	ldd	r4, Y+16	; 0x10
 f12:	5f 84       	ldd	r5, Y+15	; 0x0f
 f14:	6e 84       	ldd	r6, Y+14	; 0x0e
 f16:	7d 84       	ldd	r7, Y+13	; 0x0d
 f18:	8c 84       	ldd	r8, Y+12	; 0x0c
 f1a:	9b 84       	ldd	r9, Y+11	; 0x0b
 f1c:	aa 84       	ldd	r10, Y+10	; 0x0a
 f1e:	b9 84       	ldd	r11, Y+9	; 0x09
 f20:	c8 84       	ldd	r12, Y+8	; 0x08
 f22:	df 80       	ldd	r13, Y+7	; 0x07
 f24:	ee 80       	ldd	r14, Y+6	; 0x06
 f26:	fd 80       	ldd	r15, Y+5	; 0x05
 f28:	0c 81       	ldd	r16, Y+4	; 0x04
 f2a:	1b 81       	ldd	r17, Y+3	; 0x03
 f2c:	aa 81       	ldd	r26, Y+2	; 0x02
 f2e:	b9 81       	ldd	r27, Y+1	; 0x01
 f30:	ce 0f       	add	r28, r30
 f32:	d1 1d       	adc	r29, r1
 f34:	0f b6       	in	r0, 0x3f	; 63
 f36:	f8 94       	cli
 f38:	de bf       	out	0x3e, r29	; 62
 f3a:	0f be       	out	0x3f, r0	; 63
 f3c:	cd bf       	out	0x3d, r28	; 61
 f3e:	ed 01       	movw	r28, r26
 f40:	08 95       	ret

00000f42 <_exit>:
 f42:	f8 94       	cli

00000f44 <__stop_program>:
 f44:	ff cf       	rjmp	.-2      	; 0xf44 <__stop_program>
